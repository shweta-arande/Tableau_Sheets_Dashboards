<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0326.1623                               -->
<workbook source-build='2020.1.2 (20201.20.0326.1623)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Sub-Categ' datatype='string' name='[Shipping Cost Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Binders&quot;'>
        <calculation class='tableau' formula='&quot;Binders&quot;' />
        <members>
          <member value='&quot;Accessories&quot;' />
          <member value='&quot;Appliances&quot;' />
          <member value='&quot;Art&quot;' />
          <member value='&quot;Binders&quot;' />
          <member value='&quot;Bookcases&quot;' />
          <member value='&quot;Chairs&quot;' />
          <member value='&quot;Copiers&quot;' />
          <member value='&quot;Envelopes&quot;' />
          <member value='&quot;Fasteners&quot;' />
          <member value='&quot;Furnishings&quot;' />
          <member value='&quot;Labels&quot;' />
          <member value='&quot;Machines&quot;' />
          <member value='&quot;Paper&quot;' />
          <member value='&quot;Phones&quot;' />
          <member value='&quot;Storage&quot;' />
          <member value='&quot;Supplies&quot;' />
          <member value='&quot;Tables&quot;' />
        </members>
      </column>
      <column caption='Threshold' datatype='integer' name='[Sub-Categ (copy)]' param-domain-type='range' role='measure' type='quantitative' value='6427'>
        <calculation class='tableau' formula='6427' />
        <range max='10000' min='1' />
      </column>
    </datasource>
    <datasource caption='Orders (Global Superstore)' inline='true' name='federated.11cdiz90ok8w8j17d37gk0spvjds' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global Superstore' name='excel-direct.140fevo1cf8iyo1b0t6861x6arwd'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='F:/Tableau/2/Section 2-0 - Data Types in Tableau/Global Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.140fevo1cf8iyo1b0t6861x6arwd' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:X51291:no:A1:X51291:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='City' ordinal='8' />
            <column datatype='string' name='State' ordinal='9' />
            <column datatype='string' name='Country' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Market' ordinal='12' />
            <column datatype='string' name='Region' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='real' name='Sales' ordinal='18' />
            <column datatype='integer' name='Quantity' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='real' name='Profit' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
            <column datatype='string' name='Order Priority' ordinal='23' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X51291:no:A1:X51291:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highlighter' datatype='boolean' name='[Calculation_1476054781345058816]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Sub-Category]= [Parameters].[Shipping Cost Parameter] THEN TRUE ELSE FALSE END' />
      </column>
      <column caption='-ve profit' datatype='real' name='[Calculation_1476054781351096322]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF SUM([Profit])&lt; 0 THEN SUM([Profit])END' />
      </column>
      <column caption='+ve Profit' datatype='real' name='[Calculation_1476054781351272451]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF SUM([Profit]) &gt;0 THEN SUM([Profit])END' />
      </column>
      <column caption='Profitability' datatype='boolean' name='[Calculation_1476054781412220932]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([Profit])&gt; [Parameters].[Sub-Categ (copy)] THEN TRUE ELSE FALSE END' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Bad Products]' derivation='InOut' name='[io:Bad Products:nk]' pivot='key' type='nominal'>
        <aliases>
          <alias key='false' value='Good Products' />
          <alias key='true' value='Bad Products' />
        </aliases>
      </column-instance>
      <column-instance column='[Calculation_1476054781345058816]' derivation='None' name='[none:Calculation_1476054781345058816:nk]' pivot='key' type='nominal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Category,MONTH(Order Date))' hidden='true' name='[Action (Category,MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Bad Products' name='[Bad Products]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='SUM([Profit]) &lt;= 0.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[Product Name]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Country,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country:nk]' />
          <groupfilter function='level-members' level='[none:State:nk]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Category,YEAR(Order Date))' hidden='true' name='[Tooltip (Category,YEAR(Order Date))]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Categories'>
          <field>[Category]</field>
          <field>[Sub-Category]</field>
          <field>[Product Name]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.486486' group-percentage='0.0565111' measure-ordering='alphabetic' measure-percentage='0.353808' parameter-percentage='0.103194' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1476054781345058816:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>false</bucket>
            </map>
            <map to='#edc948'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Category:nk]' type='shape'>
            <map to='Categories/furniture.png'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='Categories/office.png'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
            <map to='Categories/technology.png'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Bad Products:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>false</bucket>
            </map>
            <map to='#e15759'>
              <bucket>true</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Sub-Categ' datatype='string' name='[Shipping Cost Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Binders&quot;'>
          <calculation class='tableau' formula='&quot;Binders&quot;' />
        </column>
        <column caption='Threshold' datatype='integer' name='[Sub-Categ (copy)]' param-domain-type='range' role='measure' type='quantitative' value='6427'>
          <calculation class='tableau' formula='6427' />
          <range max='10000' min='1' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='Dataset (Excel - Set Tutorial)' inline='true' name='federated.16z410b0taemne14gnj0k1t1awm7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Excel - Set Tutorial' name='excel-direct.0ym0rk70k0rc2m17m1zyj14q9dv8'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='F:/Tableau/4/Section 2-3 - Sets I/Excel - Set Tutorial.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Global Superstore' name='excel-direct.0g51gyp1xszret13nn6fp0pl2gki'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='F:/Tableau/2/Section 2-0 - Data Types in Tableau/Global Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0g51gyp1xszret13nn6fp0pl2gki' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:X51291:no:A1:X51291:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='City' ordinal='8' />
            <column datatype='string' name='State' ordinal='9' />
            <column datatype='string' name='Country' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Market' ordinal='12' />
            <column datatype='string' name='Region' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='real' name='Sales' ordinal='18' />
            <column datatype='integer' name='Quantity' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='real' name='Profit' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
            <column datatype='string' name='Order Priority' ordinal='23' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X51291:no:A1:X51291:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Category1' datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <group caption='Disc&gt;9%' name='[Disc&gt;9%]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='AVG([Discount]) &gt; 0.089999999999999997' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[Order ID]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group caption='Discount &gt;9%' name='[Discount &gt;9%]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='AVG([Discount]) &gt; 0.089999999999999997' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[Order ID]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.542998' group-percentage='0.103194' measure-ordering='alphabetic' measure-percentage='0.253071' parameter-percentage='0.100737' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.11cdiz90ok8w8j17d37gk0spvjds'>
      <datasources>
        <datasource caption='Orders (Global Superstore)' name='federated.11cdiz90ok8w8j17d37gk0spvjds' />
      </datasources>
      <datasource-dependencies datasource='federated.11cdiz90ok8w8j17d37gk0spvjds'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]'>
        <groupfilter function='member' level='[none:Category:nk]' member='&quot;Furniture&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        <target field='[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='21-Time data' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='10-Aggregation and granularity'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Global Superstore)' name='federated.11cdiz90ok8w8j17d37gk0spvjds' />
          </datasources>
          <datasource-dependencies datasource='federated.11cdiz90ok8w8j17d37gk0spvjds'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.11cdiz90ok8w8j17d37gk0spvjds].[sum:Sales:qk]</rows>
        <cols>([federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk] / [federated.11cdiz90ok8w8j17d37gk0spvjds].[yr:Order Date:ok])</cols>
      </table>
      <simple-id uuid='{2C4921A6-D599-4B89-B36F-89F6CEE4B117}' />
    </worksheet>
    <worksheet name='14-length'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Global Superstore)' name='federated.11cdiz90ok8w8j17d37gk0spvjds' />
          </datasources>
          <datasource-dependencies datasource='federated.11cdiz90ok8w8j17d37gk0spvjds'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk] / [federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Sub-Category:nk])</rows>
        <cols>[federated.11cdiz90ok8w8j17d37gk0spvjds].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{F478912B-FA65-4826-975F-B4C211ED9366}' />
    </worksheet>
    <worksheet name='15-Reference lines'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Global Superstore)' name='federated.11cdiz90ok8w8j17d37gk0spvjds' />
          </datasources>
          <datasource-dependencies datasource='federated.11cdiz90ok8w8j17d37gk0spvjds'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[Action (Category,MONTH(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11cdiz90ok8w8j17d37gk0spvjds].[Action (Category,MONTH(Order Date))]</column>
            <column>[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <reference-line axis-column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[sum:Profit:qk]' enable-instant-analytics='true' formula='average' id='refline0' label='$&lt;Value&gt;: &lt;Computation&gt; of &lt;FieldName&gt;' label-type='custom' probability='95' scope='per-pane' value-column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[sum:Profit:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.11cdiz90ok8w8j17d37gk0spvjds].[sum:Profit:qk]</rows>
        <cols>([federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk] / [federated.11cdiz90ok8w8j17d37gk0spvjds].[yr:Order Date:ok])</cols>
      </table>
      <simple-id uuid='{CE4E1C71-BBE2-42AD-862E-0A3B2491ED30}' />
    </worksheet>
    <worksheet name='17-Color'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Global Superstore)' name='federated.11cdiz90ok8w8j17d37gk0spvjds' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Sub-Categ' datatype='string' name='[Shipping Cost Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Binders&quot;'>
              <calculation class='tableau' formula='&quot;Binders&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11cdiz90ok8w8j17d37gk0spvjds'>
            <column caption='Highlighter' datatype='boolean' name='[Calculation_1476054781345058816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Sub-Category]= [Parameters].[Shipping Cost Parameter] THEN TRUE ELSE FALSE END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1476054781345058816]' derivation='None' name='[none:Calculation_1476054781345058816:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Calculation_1476054781345058816:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk] / [federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Sub-Category:nk])</rows>
        <cols>[federated.11cdiz90ok8w8j17d37gk0spvjds].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{DC5FC56B-FFBE-4EA7-BADC-8A57711F011D}' />
    </worksheet>
    <worksheet name='18-Parameters'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Global Superstore)' name='federated.11cdiz90ok8w8j17d37gk0spvjds' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Sub-Categ' datatype='string' name='[Shipping Cost Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Binders&quot;'>
              <calculation class='tableau' formula='&quot;Binders&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11cdiz90ok8w8j17d37gk0spvjds'>
            <column caption='Highlighter' datatype='boolean' name='[Calculation_1476054781345058816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Sub-Category]= [Parameters].[Shipping Cost Parameter] THEN TRUE ELSE FALSE END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1476054781345058816]' derivation='None' name='[none:Calculation_1476054781345058816:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Furniture&quot;</bucket>
              <bucket>&quot;Office Supplies&quot;</bucket>
              <bucket>&quot;Technology&quot;</bucket>
            </dictionary>
          </manual-sort>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Sub-Category:nk]' direction='DESC' measure-to-sort-by='[federated.11cdiz90ok8w8j17d37gk0spvjds].[sum:Profit:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Calculation_1476054781345058816:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk] / ([federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Sub-Category:nk] / [federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Calculation_1476054781345058816:nk]))</rows>
        <cols>[federated.11cdiz90ok8w8j17d37gk0spvjds].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{CC179A6B-ACE5-4D4A-A1AB-A9C3A2D922A7}' />
    </worksheet>
    <worksheet name='19-Tooltips'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Global Superstore)' name='federated.11cdiz90ok8w8j17d37gk0spvjds' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Sub-Categ' datatype='string' name='[Shipping Cost Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Binders&quot;'>
              <calculation class='tableau' formula='&quot;Binders&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11cdiz90ok8w8j17d37gk0spvjds'>
            <column caption='Highlighter' datatype='boolean' name='[Calculation_1476054781345058816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Sub-Category]= [Parameters].[Shipping Cost Parameter] THEN TRUE ELSE FALSE END' />
            </column>
            <column caption='-ve profit' datatype='real' name='[Calculation_1476054781351096322]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([Profit])&lt; 0 THEN SUM([Profit])END' />
            </column>
            <column caption='+ve Profit' datatype='real' name='[Calculation_1476054781351272451]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([Profit]) &gt;0 THEN SUM([Profit])END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1476054781345058816]' derivation='None' name='[none:Calculation_1476054781345058816:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1476054781351096322]' derivation='User' name='[usr:Calculation_1476054781351096322:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1476054781351272451]' derivation='User' name='[usr:Calculation_1476054781351272451:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Furniture&quot;</bucket>
              <bucket>&quot;Office Supplies&quot;</bucket>
              <bucket>&quot;Technology&quot;</bucket>
            </dictionary>
          </manual-sort>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Sub-Category:nk]' direction='DESC' measure-to-sort-by='[federated.11cdiz90ok8w8j17d37gk0spvjds].[sum:Profit:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Calculation_1476054781345058816:nk]' />
              <tooltip column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[usr:Calculation_1476054781351272451:qk]' />
              <tooltip column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[usr:Calculation_1476054781351096322:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Category:&#9;</run>
                <run bold='true'>&lt;[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sub-Category:&#9;</run>
                <run bold='true'>&lt;[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Sub-Category:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Profit:&#9;</run>
                <run bold='true' fontcolor='#72b966'>&lt;[federated.11cdiz90ok8w8j17d37gk0spvjds].[usr:Calculation_1476054781351272451:qk]&gt;</run>
                <run bold='true' fontcolor='#f17b79'>&lt;[federated.11cdiz90ok8w8j17d37gk0spvjds].[usr:Calculation_1476054781351096322:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk] / ([federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Sub-Category:nk] / [federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Calculation_1476054781345058816:nk]))</rows>
        <cols>[federated.11cdiz90ok8w8j17d37gk0spvjds].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{52ECE2B1-A9FA-4045-A1A9-E3A7CE35CA62}' />
    </worksheet>
    <worksheet name='19-Tooltips1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Global Superstore)' name='federated.11cdiz90ok8w8j17d37gk0spvjds' />
          </datasources>
          <datasource-dependencies datasource='federated.11cdiz90ok8w8j17d37gk0spvjds'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <reference-line axis-column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[sum:Profit:qk]' enable-instant-analytics='true' formula='average' id='refline0' label='$&lt;Value&gt;:&lt;Computation&gt; of Profits' label-type='custom' probability='95' scope='per-pane' value-column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[sum:Profit:qk]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>THE &lt;[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]&gt; category in &lt;Year(Order Date)&gt; is &lt;[federated.11cdiz90ok8w8j17d37gk0spvjds].[sum:Profit:qk]&gt; in profit.</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#787878'>&lt;Sheet name=&quot;19-Tooltips&quot; maxwidth=&quot;300&quot; maxheight=&quot;300&quot; filter=&quot;&lt;All Fields&gt;&quot;&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Category:&#9;</run>
                <run bold='true'>&lt;[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year of Order Date:&#9;</run>
                <run bold='true'>&lt;[federated.11cdiz90ok8w8j17d37gk0spvjds].[yr:Order Date:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Profit:&#9;</run>
                <run bold='true'>&lt;[federated.11cdiz90ok8w8j17d37gk0spvjds].[sum:Profit:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.11cdiz90ok8w8j17d37gk0spvjds].[sum:Profit:qk]</rows>
        <cols>([federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk] / [federated.11cdiz90ok8w8j17d37gk0spvjds].[yr:Order Date:ok])</cols>
      </table>
      <simple-id uuid='{3DA0EBAB-8DCD-406F-9AF0-68249B9B3AF3}' />
    </worksheet>
    <worksheet name='21-Time data'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Global Superstore)' name='federated.11cdiz90ok8w8j17d37gk0spvjds' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Threshold' datatype='integer' name='[Sub-Categ (copy)]' param-domain-type='range' role='measure' type='quantitative' value='6427'>
              <calculation class='tableau' formula='6427' />
              <range max='10000' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11cdiz90ok8w8j17d37gk0spvjds'>
            <column caption='Profitability' datatype='boolean' name='[Calculation_1476054781412220932]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([Profit])&gt; [Parameters].[Sub-Categ (copy)] THEN TRUE ELSE FALSE END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1476054781412220932]' derivation='User' name='[usr:Calculation_1476054781412220932:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.11cdiz90ok8w8j17d37gk0spvjds].[usr:Calculation_1476054781412220932:nk]' value='(Profitability)'>
              <formatted-text>
                <run>(Profitability)</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[usr:Calculation_1476054781412220932:nk]' />
            </encodings>
            <reference-line axis-column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[sum:Profit:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[Parameters].[Sub-Categ (copy)]' z-order='1' />
          </pane>
        </panes>
        <rows>([federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk] * [federated.11cdiz90ok8w8j17d37gk0spvjds].[sum:Profit:qk])</rows>
        <cols>[federated.11cdiz90ok8w8j17d37gk0spvjds].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{E707F388-D24F-4E8C-A41E-DF608B950A02}' />
    </worksheet>
    <worksheet name='22-Filter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Global Superstore)' name='federated.11cdiz90ok8w8j17d37gk0spvjds' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Threshold' datatype='integer' name='[Sub-Categ (copy)]' param-domain-type='range' role='measure' type='quantitative' value='6427'>
              <calculation class='tableau' formula='6427' />
              <range max='10000' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11cdiz90ok8w8j17d37gk0spvjds'>
            <column caption='Profitability' datatype='boolean' name='[Calculation_1476054781412220932]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([Profit])&gt; [Parameters].[Sub-Categ (copy)] THEN TRUE ELSE FALSE END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1476054781412220932]' derivation='User' name='[usr:Calculation_1476054781412220932:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[tmn:Order Date:qk]' included-values='in-range'>
            <min>#2011-01-01 00:00:00#</min>
            <max>#2014-12-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.11cdiz90ok8w8j17d37gk0spvjds].[tmn:Order Date:qk]</column>
            <column>[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.11cdiz90ok8w8j17d37gk0spvjds].[usr:Calculation_1476054781412220932:nk]' value='(Profitability)'>
              <formatted-text>
                <run>(Profitability)</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[usr:Calculation_1476054781412220932:nk]' />
            </encodings>
            <reference-line axis-column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[sum:Profit:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[Parameters].[Sub-Categ (copy)]' z-order='1' />
          </pane>
        </panes>
        <rows>([federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk] * [federated.11cdiz90ok8w8j17d37gk0spvjds].[sum:Profit:qk])</rows>
        <cols>[federated.11cdiz90ok8w8j17d37gk0spvjds].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{202C1CD1-431B-478A-911E-B16D26394636}' />
    </worksheet>
    <worksheet name='Context filters'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Global Superstore)' name='federated.11cdiz90ok8w8j17d37gk0spvjds' />
          </datasources>
          <datasource-dependencies datasource='federated.11cdiz90ok8w8j17d37gk0spvjds'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Sub-Category:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;Accessories&quot;' function='range' level='[none:Sub-Category:nk]' to='&quot;Tables&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2011' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11cdiz90ok8w8j17d37gk0spvjds].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]</column>
            <column>[federated.11cdiz90ok8w8j17d37gk0spvjds].[yr:Order Date:ok]</column>
            <column>[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.11cdiz90ok8w8j17d37gk0spvjds].[yr:Order Date:ok] / [federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Sub-Category:nk])</rows>
        <cols>[federated.11cdiz90ok8w8j17d37gk0spvjds].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{B2C94ABD-B336-4486-B09D-44535F600A1D}' />
    </worksheet>
    <worksheet name='Custom Shapes'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Global Superstore)' name='federated.11cdiz90ok8w8j17d37gk0spvjds' />
          </datasources>
          <datasource-dependencies datasource='federated.11cdiz90ok8w8j17d37gk0spvjds'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.11cdiz90ok8w8j17d37gk0spvjds].[avg:Discount:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]' />
              <shape column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]' />
              <lod column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]' />
              <lod column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5272375345230103' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11cdiz90ok8w8j17d37gk0spvjds].[sum:Profit:qk]</rows>
        <cols>[federated.11cdiz90ok8w8j17d37gk0spvjds].[avg:Discount:qk]</cols>
      </table>
      <simple-id uuid='{95EA53B0-7FD3-4084-BB2B-AE53A215504D}' />
    </worksheet>
    <worksheet name='More sets'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Global Superstore)' name='federated.11cdiz90ok8w8j17d37gk0spvjds' />
          </datasources>
          <datasource-dependencies datasource='federated.11cdiz90ok8w8j17d37gk0spvjds'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Bad Products]' derivation='InOut' name='[io:Bad Products:nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Good Products' />
                <alias key='true' value='Bad Products' />
              </aliases>
            </column-instance>
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[Action (Category,MONTH(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11cdiz90ok8w8j17d37gk0spvjds].[Action (Category,MONTH(Order Date))]</column>
            <column>[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[io:Bad Products:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk] / [federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Sub-Category:nk])</rows>
        <cols>[federated.11cdiz90ok8w8j17d37gk0spvjds].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{27D02556-86D3-461E-AEF4-2D7B8DABA57A}' />
    </worksheet>
    <worksheet name='Sheet 17'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0693FED1-4B71-42BD-A02D-F0A4DE35CBB7}' />
    </worksheet>
    <worksheet name='Shipping cost analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Global Superstore)' name='federated.11cdiz90ok8w8j17d37gk0spvjds' />
          </datasources>
          <datasource-dependencies datasource='federated.11cdiz90ok8w8j17d37gk0spvjds'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ship Date]' derivation='Month' name='[mn:Ship Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ship Date]' derivation='Year' name='[yr:Ship Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[yr:Ship Date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Ship Date:ok]' member='2011' />
              <groupfilter function='member' level='[yr:Ship Date:ok]' member='2012' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11cdiz90ok8w8j17d37gk0spvjds].[yr:Ship Date:ok]</column>
            <column>[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6591712236404419' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Ship Mode:nk] * [federated.11cdiz90ok8w8j17d37gk0spvjds].[avg:Profit:qk])</rows>
        <cols>([federated.11cdiz90ok8w8j17d37gk0spvjds].[yr:Ship Date:ok] / [federated.11cdiz90ok8w8j17d37gk0spvjds].[mn:Ship Date:ok])</cols>
      </table>
      <simple-id uuid='{6FD0CC0C-CCE0-41B3-9BCE-FAB4AA7E7E24}' />
    </worksheet>
    <worksheet name='Trendlines'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Global Superstore)' name='federated.11cdiz90ok8w8j17d37gk0spvjds' />
          </datasources>
          <datasource-dependencies datasource='federated.11cdiz90ok8w8j17d37gk0spvjds'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='None' name='[none:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[Inclusions (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Aichi&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Chiba&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Fukuoka&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Hiroshima&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Hyogo&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Ishikawa&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Kagawa&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Kanagawa&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Mie&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Oita&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Osaka&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Saga&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Saitama&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Yamaguchi&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;Japan&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Profit:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>2939.3099999999999</max>
          </filter>
          <slices>
            <column>[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Country:nk]</column>
            <column>[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Profit:qk]</column>
            <column>[federated.11cdiz90ok8w8j17d37gk0spvjds].[Inclusions (Country,State)]</column>
            <column>[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Country:nk]' />
              <lod column='[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2413811683654785' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11cdiz90ok8w8j17d37gk0spvjds].[sum:Profit:qk]</rows>
        <cols>[federated.11cdiz90ok8w8j17d37gk0spvjds].[sum:Quantity:qk]</cols>
      </table>
      <simple-id uuid='{2FAC31AE-5F98-46CB-99F3-B8DD45315B40}' />
    </worksheet>
    <worksheet name='sets'>
      <table>
        <view>
          <datasources>
            <datasource caption='Dataset (Excel - Set Tutorial)' name='federated.16z410b0taemne14gnj0k1t1awm7' />
          </datasources>
          <datasource-dependencies datasource='federated.16z410b0taemne14gnj0k1t1awm7'>
            <column caption='Category1' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.16z410b0taemne14gnj0k1t1awm7].[avg:Discount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16z410b0taemne14gnj0k1t1awm7].[none:Category:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{2557418C-46A9-4427-85BB-0668D3EA5B2A}' />
    </worksheet>
    <worksheet name='setsII'>
      <table>
        <view>
          <datasources>
            <datasource caption='Dataset (Excel - Set Tutorial)' name='federated.16z410b0taemne14gnj0k1t1awm7' />
            <datasource caption='Orders (Global Superstore)' name='federated.11cdiz90ok8w8j17d37gk0spvjds' />
          </datasources>
          <datasource-dependencies datasource='federated.11cdiz90ok8w8j17d37gk0spvjds'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.16z410b0taemne14gnj0k1t1awm7'>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Disc&gt;9%]' derivation='InOut' name='[io:Disc&gt;9%:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.16z410b0taemne14gnj0k1t1awm7].[io:Disc&gt;9%:nk]' />
              <size column='[federated.16z410b0taemne14gnj0k1t1awm7].[avg:Discount:qk]' />
              <tooltip column='[federated.16z410b0taemne14gnj0k1t1awm7].[avg:Discount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4612706899642944' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk] / [federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Sub-Category:nk])</rows>
        <cols>[federated.16z410b0taemne14gnj0k1t1awm7].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{0E578A57-3319-490F-AAF0-8EB912335A53}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Category Profitability</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='Orders (Global Superstore)' name='federated.11cdiz90ok8w8j17d37gk0spvjds' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Threshold' datatype='integer' name='[Sub-Categ (copy)]' param-domain-type='range' role='measure' type='quantitative' value='6427'>
          <calculation class='tableau' formula='6427' />
          <range max='10000' min='1' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.11cdiz90ok8w8j17d37gk0spvjds'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97298' id='16' param='vert' type='layout-flow' w='98614' x='693' y='1351'>
            <zone h='7094' id='17' type='title' w='98614' x='693' y='1351'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='90204' id='8' param='horz' type='layout-flow' w='98614' x='693' y='8445'>
              <zone h='90204' id='6' type='layout-basic' w='84761' x='693' y='8445'>
                <zone h='45102' id='3' name='15-Reference lines' w='42381' x='693' y='8445'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45102' id='11' name='21-Time data' w='84761' x='693' y='53547'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45102' id='13' name='More sets' w='42380' x='43074' y='8445'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='90204' id='7' is-fixed='true' param='vert' type='layout-flow' w='13853' x='85454' y='8445'>
                <zone h='12669' id='18' mode='slider' name='21-Time data' param='[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]' type='filter' values='cascading' w='13853' x='85454' y='8445'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='12669' id='10' mode='slider' param='[Parameters].[Sub-Categ (copy)]' type='paramctrl' w='13853' x='85454' y='21114'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='11148' id='12' name='21-Time data' pane-specification-id='0' param='[federated.11cdiz90ok8w8j17d37gk0spvjds].[usr:Calculation_1476054781412220932:nk]' type='color' w='13853' x='85454' y='33783'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='54' h='10473' id='14' is-fixed='true' name='More sets' pane-specification-id='0' param='[federated.11cdiz90ok8w8j17d37gk0spvjds].[io:Bad Products:nk]' type='color' w='13853' x='85454' y='44931'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>Category Profitability</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='97298' id='19' param='vert' type='layout-flow' w='98614' x='693' y='1351'>
                <zone h='7094' id='17' type='title' w='98614' x='693' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45102' id='3' is-fixed='true' name='15-Reference lines' w='42381' x='693' y='8445'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45102' id='13' is-fixed='true' name='More sets' w='42380' x='43074' y='8445'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='54' h='10473' id='14' name='More sets' pane-specification-id='0' param='[federated.11cdiz90ok8w8j17d37gk0spvjds].[io:Bad Products:nk]' type='color' w='13853' x='85454' y='44931'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12669' id='10' mode='slider' param='[Parameters].[Sub-Categ (copy)]' type='paramctrl' w='13853' x='85454' y='21114'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12669' id='18' mode='slider' name='21-Time data' param='[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]' type='filter' values='cascading' w='13853' x='85454' y='8445'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45102' id='11' is-fixed='true' name='21-Time data' w='84761' x='693' y='53547'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11148' id='12' name='21-Time data' pane-specification-id='0' param='[federated.11cdiz90ok8w8j17d37gk0spvjds].[usr:Calculation_1476054781412220932:nk]' type='color' w='13853' x='85454' y='33783'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4817F423-7D29-40C1-93BF-7DBBBE65DA2E}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='3' param='vert' type='layout-flow' w='98400' x='800' y='1000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{54E59A36-D739-45A8-A555-7BE630FB7EAF}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='10-Aggregation and granularity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D2ED4FC2-2D31-4B32-8460-0A59670CE169}' />
    </window>
    <window class='worksheet' name='14-length'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{174609E4-3071-4D85-8AAF-B8AC2611B17C}' />
    </window>
    <window class='worksheet' name='15-Reference lines'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D425978A-4D2D-4167-913A-4C9595607DE6}' />
    </window>
    <window class='worksheet' name='17-Color'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Calculation_1476054781345058816:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{632C4CFF-9D96-4863-8FD7-5F435D668E20}' />
    </window>
    <window class='worksheet' name='18-Parameters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Shipping Cost Parameter]' type='parameter' />
            <card pane-specification-id='0' param='[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Calculation_1476054781345058816:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{696E038E-B3C9-4FF5-87DA-93E9AA7880AA}' />
    </window>
    <window class='worksheet' name='19-Tooltips'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Calculation_1476054781345058816:nk]' type='color' />
            <card mode='slider' param='[Parameters].[Shipping Cost Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7E940EB7-0CB5-47D6-8968-A3C1E96E23D9}' />
    </window>
    <window class='worksheet' name='19-Tooltips1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A3CDC3C8-AF5D-4123-9EF8-852B5577CBB9}' />
    </window>
    <window class='worksheet' name='21-Time data'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Sub-Categ (copy)]' type='parameter' />
            <card pane-specification-id='0' param='[federated.11cdiz90ok8w8j17d37gk0spvjds].[usr:Calculation_1476054781412220932:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3979DBB1-26CD-4E8D-9D06-8E059435BF42}' />
    </window>
    <window class='worksheet' name='22-Filter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.11cdiz90ok8w8j17d37gk0spvjds].[tmn:Order Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='slider' param='[Parameters].[Sub-Categ (copy)]' type='parameter' />
            <card pane-specification-id='0' param='[federated.11cdiz90ok8w8j17d37gk0spvjds].[usr:Calculation_1476054781412220932:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{FE74145C-8FA3-4618-BD94-950BE2A48F98}' />
    </window>
    <window class='worksheet' name='Custom Shapes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Category:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EA10ADA7-748F-4FF7-9C70-361651F36149}' />
    </window>
    <window class='worksheet' name='Context filters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.11cdiz90ok8w8j17d37gk0spvjds].[yr:Order Date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{80FD5081-D6EC-43B9-BC93-33628F386DF9}' />
    </window>
    <window class='worksheet' name='sets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{AB94419F-2BC2-47FE-A162-D8DF819F65DE}' />
    </window>
    <window class='worksheet' name='setsII'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16z410b0taemne14gnj0k1t1awm7].[io:Disc&gt;9%:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.16z410b0taemne14gnj0k1t1awm7].[avg:Discount:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{00C7788F-2441-4906-9B20-B81C1E33C1D2}' />
    </window>
    <window class='worksheet' name='More sets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11cdiz90ok8w8j17d37gk0spvjds].[io:Bad Products:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{935E988F-91FD-4FBC-96B8-EE3B7B60C640}' />
    </window>
    <window class='worksheet' name='Shipping cost analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.11cdiz90ok8w8j17d37gk0spvjds].[yr:Ship Date:ok]' type='filter' />
            <card pane-specification-id='2' param='[federated.11cdiz90ok8w8j17d37gk0spvjds].[sum:Profit:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1556BC13-C1FE-46B9-9445-7DBFDE454FAD}' />
    </window>
    <window class='worksheet' name='Trendlines'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.11cdiz90ok8w8j17d37gk0spvjds].[none:Country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DE39DE8A-C833-4F83-BE23-A69EEBC94BF8}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='15-Reference lines'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='21-Time data'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='More sets' />
      </viewpoints>
      <active id='18' />
      <simple-id uuid='{01BEBBC1-F825-4E1B-A58E-D7DF95850FE9}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{03616E23-31FA-4B5A-A3A7-22FA8D5B2096}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4F28A51F-20C1-4CC1-8606-4EDA77C8EA80}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='15-Reference lines' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='17-Color' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='18-Parameters' width='192'>
      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
      JUHKvhhEAAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='19-Tooltips' width='192'>
      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
      JUHKvhhEAAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='21-Time data' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='22-Filter' width='192'>
      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
    </thumbnail>
    <thumbnail height='179' name='Context filters' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACzCAYAAADfahNoAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAARRklEQVR4nO3df1xU9Z7H8VedBmckNRQn8Ef+AgXMHITwUlS2ubiUXdm8DzGvJMpNFPJq
      be59XC1dvVu7m616zVK0UfshapaLm0q6eq8mpRLG+At/QEr+SESUlIuMM/fQ/jFjguKPxHEG
      vp/nXzrn8J3jeN7z/Z5hPudz108//fQTQijqbm8fgBDeJAEQSpMACKVJAITSJABCaRIAoTQJ
      gFCaBEAoTQIglCYBEEqTAAilSQCE0iQAQmkSAKE0CYBQmgRAKE0CIJQmARBKkwAIpUkAhNIk
      AEJpEgChNAmAUJoEQChNAiCUJgEQSpMACKXdc6Md8vPz78RxCOEVd8nNcYUvy8/PJzo62mPj
      yxJIKO2GSyAhvG3QpOUeG1tmAKG0Bs0AzrJvWG5dQV5JJQ6/FvToP4a0QSH4A+jlbFsyi6y8
      cnRTR54Y/TJJEf6uH9TtnNz7V/5v89d8e+9gZqdaao9KxeEdbMnZSu7fLLz6hwSCGnKQQlxH
      AwKwh+Xz9tEleTJDuwZwt/0kue/PZfWBNxgWBqUbFvDXgBG88V53TGdyWfjfH7BjWjp9jVC6
      aQEfV8QyPC0R59IrhrUtZ05+O4YMG06zVXsb9I/zdc5jm1iw4HP2lVWDyUxIbCIv/CaKQM3b
      R6aOBgQggmGv9UK79J9lDCYuthNL7ABH+PqbB0ic3J2WGmCOY2j8V2QV2OkbayQo/vdMBMB2
      9bCWZKZaAEopufWD8316ISsWHqT3uBlkmA3o9pPsXf8l+09H8VgQlOZYKYhMJUGmP49qwDWA
      dvnkB6gqZvVXJmLCAM5R0bobXWttbx3ek3vOnL31p2tqzh7naIe+xJoNAGjGYHoPSuIxOeHv
      qNvwKZDO+UNreH8N/DotmRAjcPEiF00mjLV3u1uj7FQZ0K7hT9kUtH2I6PJZzFhRzZD+0XRq
      Y8T1flFKzvSpZJ8AsvPIBogZS2aqBaqKyVmymHW7y3H4BfLQ0yNJSXBdc7lmjKF02jKLBVtq
      GDBlCgmOjcxcuIbismp0zUTHJ0bzclKE6xqt9liaiY7twon5XRrxQXW36SYzUUnjSYkNpCmu
      zBoYACfHchbwvwwg7RX3xS9As2Y0q67GDpdDUKNjvt/csKdrUoKIn/gv3L9uJYv/lMWP/j15
      emQKCSFBJEzJJPKqJZAd2/IPOdL7JWaMCcbgPMm2RfNYbptEqsUI6Bxba6Wo3RCmv+Neelb0
      IHFCnCtcup39Kxfx1ekI4tva2fHBQo70nsCMMcEYsbN94VtUAKBT+MUWmj/3OrMzjGjOCrYv
      XsbWiHT6tfLSS+VBDQrA2c2L2GROZkxUyyveHVoRcHYvh/VYItwbzu7fx9/b9G/I0zU9BjO9
      B2XQe5CTquM2VloXsnncBPq1rm/nImwnYkhMDXa9qWjBxCXG8JcNRWDpBZzH0SOFjLha79R+
      lezOXMCc4jKqdddDMWFA2wPsvWcIaXHB7n2NGA21nic3jy0b8siq9ewxMdCv9od1TUQDAnCA
      L/aE8OtxV578AF145OFlLFp9iA6DXJ8CLd/QgoenGesZR4AB/w4PkzywgCVHuUYAbiSAbiF1
      lyl7VmbjTHiFGeEBGIDSnOmsBdB1dE27xpLGiSPgWabOGqjEYvXWA3D6KCV7P+OPaZ/Uebh9
      4jSmJAQRFD+aJ5fMYnJ6OboplAEvjaWv+/y3WdOYl3f5Z/LyAGIYm5lKUM50pmaf+Hlbdl42
      0J7EaVOa1icip7/i0/zWPP54CGZ/A86qw6xff4LA4Zd2OMV3xefRg1pS43RiMIRiab+S7Nwo
      RsW6l0DZebR/5Fqzqo7D4U+boHsx4KTqeCFf76uAYEDrQreK+aw61JVB3VtSU3GYo2fANQmE
      Eh74AVkbHuSlpzpj1FyzU1HNw1geuAOvyx0mX4bzFvsPbFu9nHXbiimr1vFr0ZmY519kWJT7
      Xbx0K+++8wm7y3VMT2Qwe1jPm7gIrvuxqf7DBma9lU1RtUbgQ08T32YHxWH/RqoF9B82M//d
      z1zjd4yll98R2r3gfpOpKmTFnEXkllTi0EyYQ2IZPDIJS8Cdf5ny8/P506pij40vAVCSnR++
      L6fF/cG0MGro9hLWzFxH0CvpP8/SvsLTAZAvwynpIuW5HzFzewmVDtBMHYlNHsNAHzv57wSZ
      AYRPkxlAKG/1m0M9NrZ8HVooTQIglCYBEEqTAAilyUWw8HlSEyyEh0gAhNIkAF53js2zxzHu
      vW3Yb9OIpTnTsdZTbSquJgHwtnMFFJpTGUYBu25XAuqwYU2z1ld9LZAAeN25AhvNInoRGQk7
      PZIAC6mZqTTBWpbbQj4F8io7hYV+PDhKw3gxAsenB9D7Wi7XBs/9lFN3nWSn++vPMcNedtfm
      Xm/blWxYp5/kmSmu+ysd3TiThWtcX8HW6tyvqZScBevRW51hx7Ziyqo1AuNSmZRswZ/aX592
      4NeiM//0+z/yzAM65TuzmP/RNo5Va7To0Z8xaYMI8a+7v2YyEz38VUZF+15NpQTAm+wF7KyJ
      5HdGwBhGj1Nr2aNbsFw6i+3Q5bevk5xhpKbCxoq3rWzu8Qeean2DbdfRokciE+I60caoodv3
      s3LRV5yOiKctwPnjnI94nldmdCWAY6z+jw0UYcGiH2DFQhthL85gTGcjNVXHqXAAZzfzxeFo
      MmYkE2DQsZesYe7qA7w6LIzCDV8S/OJMMjob0O1nKPtbM0++krdMAuBF9oKd2B9Mdt84IIjI
      yFOs3aNjuZSAgG70CHbdLUILsPCbgbksPQq0vsG26/Cr3E3mgjmuO0UAEEMYuAIQ0Id/iOuK
      q+6lI53au3+ocDvFUUMY1tl1pJp/B8z+cG5zAVs3fsLWjbWeoL0fpYQRGvUAH8+eTknPBwm3
      /IpH+7Rp6MvlERIAr7Gzq6CQol3/Stqyy482f+wguiWi3nrdCxeqwFT/aNfbdtkeVmY7SXhl
      BuEBBly3YFl740M1+FHf+7fD4SBq9HuMjqrnaHul8OZ/nqRo72GOFC7jjW+eZFp6X3yt5EAC
      4C32Xew8NYDJmYP4udRWL+TjKd9yUI9w3U1Dr8buBAw69pLNfLglkH6TLu17nW3Xojtw+Lch
      6F4DOKs4Xvg1l8qEryu0Dx1XZJMbNYrY4EtLoA6Yw3pyNHMZtq5JWAJcS51D+07TLiqM6v27
      +PsDEYRFBxPa/V7KPj5FJUgAhIt+YC8XHv9n6tSZaxE8HpPNlwd1IiKA8i+ZO3EjldVgMvfk
      2dGjsVw6g6637Vo0CwPDZzFt/AqqtUAeejqeDq0qbnywWhhJL5Yyf+5EPqpzETyQ9H+cz7xp
      45nnrmvuPXAow4Gai7tZPPV9SiodaO6bIrS9lRfKw6QizGeVkmMtIDK1vrtjX29b0+LpijD5
      PYBQmswAwqdJTbBQntQEC+EhEgChNAmAUJoEQChNLoKFz5OaYCE8RAIglCZLIC+q2yhEw9Sx
      D0NGjeSRdg1sR1eag7UgktQm1VHEMyQAXuXqiuMqV3RSsT+bd7K20vPVfrTCFZCdUZmkSj2j
      x8gSyGcYCAh/lD4tq6l2P2JJlZPf02QG8BG6/QyH1mVxoOtwBrofs1mnc/IZV9ui0pwFrNdb
      cWbHNorLqtEC40idlIzF1fSX4pwlLF63m3KHhqmFH+anIt2j1NqmmzBHJTE+JZZArf7ewvE1
      jaOW93aRAPgITTPSolsH2P49Vf2DLvdcvrwH5ugkRgxMcv3VZsVaBBYL2KxL0VMyeCPBvWtp
      DtYC1x8PZL3GrC0X3BuqKctbwmRMrsbbVPBdcTXxSa8x2z2sfU8JR6vuo0e0u5Qxsume/CAB
      8B0Gfzr0Hkr/fCtF9P0FtzHR0XUN7RrXzU5HAM9OncXAenueXt1a1dhIShlvF7kG8Bk69pIN
      bPz+3nre/a9Ho33HU6xbdYjzOq5Sx4PfcanOKzQ8kM1ZGyixu0rgnVXH+cZ29Jqjle7fxUk9
      kLDoR4lPTCCCc1Te4r+oMZAZwKvymJd26XNQDZO5JwNGpBD6C0cJik/hkfnvunsyd6RPzH0Y
      3S1NjX1HMKpkDnMnfkalQ8NkDiF28EgevsZYzRpJKePtIgUxwqdJSaQQHiQBEEqTawDh86Qk
      UggPkQAIpUkAhNIkAEJpchEsfJ6URArhIRIAoTQJgNfd/jap4uZJALztF7ZJLc2xklPq+cNS
      hQTAyzzfJlVcj3wK5FU3aJNqLSByaCe2zFrAlppH6McmNp0AsvPIBogZ667sErdKAuBNN2qT
      qh9jrbWIdkOm8073lmgM4fEcKwWRqcgdT24PWQJ5katNakSdNqk79+iXdzjvoMewDBK6t6y3
      a6RoOJkBvOYm2qQGdCMkUE59T5IAeMvNtEmt1ym+Kz6PHtSSGqcTg8FwZ463iZIlkJe42qQ+
      Vk+b1KN8e1C/1o8RFPkYd+VMJj0tnYkrD3n8OJs6qQkWPk1qgoXwIAmAUJpcBAufJzXBQniI
      BEAoTQIglCYBEEqTi2Dh86QmWAgPkQAIpckSyIvqtEnVTJh7JjJ2TD8a2iVV3DwJgFfVapPq
      rGD/5/P486ft+a+kX9oiQ9wqWQL5CkMA4c89R+9jxUjN+50jM4CPOrd7Ke99uJ2SSgf4BfLQ
      4AzG9GuHBtisb7HTz8GebceoxkTogJcYOyjE1VusqpicJYtZt7sc3WQmKmk8KbGBaFfVGA9g
      ypQEVK+slAD4CmcF+z9fxcHQ4QwD7IFxJE8bQgd/Azgr+Evmagr7pdALADsto8cxIzmAu+0l
      bJq7kP8pnM7wCCj8YgvNn3ud2RlGNGcF2xcvY2tEOv1aUU+NsZAAeFWtJnl+Legc8zzjhrlK
      ZAyc4Is577CrpBIHAO1JLIVeQa4/h4YHYAAwdiZ+cBRzD5yGiB+x5eaxZUMeWbWeJSYG+llw
      1RinZBAnZZY/kwB4Va2L4DpOs+mTbwlN+XdGBhvdy57pnLzGKHr1Bfdd5Zw4Ap5l6qyB1N8W
      WGqMryQXwT7JieOuQMwBBjTdzpnDuew8XHe7/VLf3wobK5YfpWdkEBBKeOBmsjaU4NrspOr4
      N1ynLbDyZAbwSe148gknb05Mp1w30TH2t0R3hMu1q/v49LUJLK504NeiM3EjXiI+CMBI3xGj
      KJkzl4mfVeLQTJhDYhk88lpdgYXUBDdCNqsVUutbOjU9UhMshAfJEqgRsqSmevsQmgwJgPB5
      UhMshIfc8CI4Pz//Th2LEHecfAokfNqFCxdo3ry5x8aXJZBQmgRAKE0CIJQmARBKk4tgoTSZ
      AYTSJABCaRIAoTQJgFCaBEAoTQIgGo2q4tW8PSGdtLRxTH53Mz/UaqZps1qx1drXvmcJ0z4u
      xHmDMSUAonGw21j+4Ql+NenPZL73BiOCvyZzzTWKnatsLF3lR9LzEdyoi7IEQDQK9oJcyp8Y
      SpzZAFpLug9KJHRXPkeu2rMK2/L1BLyQRNhN3ABDAiAahR9/hNCurS8/oPUgPKics1f0FK/a
      uZR1AUMY1OXmbv8iFWGiUXBcvBuTqfYjGppWysnT4Lq/o/smY8a+pL/d5abveiczgGgU/JrV
      UF1d+xEdXQ/C3PbS32MYm5nJzKEXyFp5AP3qIeolARCNwn33QdHhs5cf0A+yvzSQ1le81fvH
      juT56hUssVXd1LgSANEoGCPjCNyynNwyJ+jnObQ6m6Le0XS5ak9/LCkvcv+6xWy7iQxIAETj
      YLQw9IX2bH9zPGnpk/mg4knGDXyg/n21diSkdOPLuTl1fldQH/k6tFCazABCaRIAoTQJgFCa
      BEAoTQIglCYBEEqTAAilSQCE0iQAQmkSAKE0CYBQmgRAKE0CIJQmARBKkwAIpUkAhNIkAEJp
      EgChNAmAUJoEQChNAiCUJgEQSpMACKVJAITSJABCaRIAoTQJgFCaBEAoTQIglCYBEEr7f88I
      VDfaXJIUAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Custom Shapes' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='More sets' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dSXBcd2Lf8e9bel/RaOz7QgIgCHAnJVEUpdGITmzHZaeSVOWUHOLkkvIx
      lUpScSW5pVw5pHxIYnucsl0VV02ScU3Z44w0GokSJe4LdmLftwZ63/ttOVALOeICUAAbTfw/
      J/TDe41/N/rX/+29/5Msy7IQhENKLncBBKGcRACEQ00EQDjURACEQ00EQDjURACEQ00EQDjU
      RACEQ00EQDjURACEQ00EQDjU1McfGIZBqVQqV1kE4ZX7TgCKxWK5ylIRTNMkk8ng9/uf+ntd
      11FV9am/KxfLsrAsC1k+WBV+qVTCbreXtQxP/KfsdnvZC3TQ6bqOYRgEg8Gn/v4g/FN/lWEY
      WJa1L8EsPHxI4s/+4qWO/ZuOHPON5Q3lM9+RUibJJ59+BLYaTl28QK3X+dwn0nJJonlwyDr+
      QAhFlva8sJnIArfH5nFX1XNyoBeH8vS/EYvFCAarkPehDMKTrFyO0tzcSx0b9RWZcxh7XKLd
      eWYALEui5eggXW3t2PQUS1GTemeOWE7FLKbZjCapCXnZXFpA97dwsr0aLRvji+tf4g508Mab
      nZSkMLZSFLvdTiKRYS1eoKfexr2xZXpPnaWhyr2rwqY3kvRcfAt9cZrVjQRtdV50w8Jmt4Fp
      oOkGqs3OxsY6fn8AywJZktA0DVm1gaFjADabDVPXMSwLu82GaejoJthtKoauYVgSdpuKJIkA
      ve6eUyeaLE2PEIkkONXhYSVXTygYI7LtILa+yOD5C6xPD9M+eIGNqUkyOTsJTeX4iVO0d/VR
      XB8mogZxZzbxeLwMP4zy3uVBPvvbn2DY3dwfnqHu8uCuhqEsI82NT67is7s5c6aFm59dpSCB
      N9yBLb1ELG/gDLbgt5VYmBxD89TgzCwzs5ml9Wgfqem7LCTynDp7iaWxmxRtYS5d7OPGR1dJ
      6BInTp5gZuw+UrCV9986he0ZNYzw+njO50+h89hp3n37PAGvh0xkhZnZRTQg1NBKyOsAu5ug
      247d9m2OrGKWhYVVdEUlujrPwtIGJtDc2YVTlQlU1dHdM8DA0cbdF1bxc+nKBwy21xDdWMSs
      6uDypUsUY0sUVD+XL7+DoxRHKxVYWo9SXe0nlZF58/JlusMyWSlAXZWL7XiB9vY23BRIbq+w
      oXlob2nG6fHQ0daKLZ8la5i7fzeFivPMGsDmctHc0PDogb+F480Ghq2WqmDVN/u0t7cjyzJN
      nR3Y7CpOv4XN9LO8nsJTd4TO4jJS8ynCIR9+U0VSVE6ePsnKRgyX28Vuv19tHovrH36I0+7h
      5NlTWLMjfPzJPEcGzqIkF/jlL6/ScvQEbrnAwPEqHs6u0dxaxc1PPqbpSB9OqUDREaTaayef
      yKBJNlzVnfTWbBJPZamXIJfNYNld2EX/4VCQxDXBu6PrOvF4nJqamqf+/rCNAuXv3WPrP//B
      Sx37lyeKPGgqbydYBGCXRACeZOk6Zi73UsfGilkcPs8el2h3DtaMjVBxJFVFecak4ItYkQJ+
      58sdu1dEAIQ9EfvRn2IVCrs65k6rzmKwvIMNFRUAyzLZWlsio9upr6lCtdmeGIESyif35XXM
      TGZXx4wegD7AwTo55AWSSxNMbWbBLBFZWyWWyT91v6XFeUzRsxF2oKK+Puc2c1w4dw6bBJGF
      ce5e/4xi0cb7f+9dpm5cZStv5+yFC8RjMeoceT4ajdHaVEtibZ6CI8x7b5zCplZU5oV9VlEB
      cMsWGd0kqAKyk5NvvIO8Mk9Kz5BMaeSSCdaTGUrFIqah0tBzmoEGifvxdfK5AgXLwlbuFyEc
      KBUVgK7edj75xc9RPEE6mxvwKjKS3c7XrR2PP4DTJmM5HMg2BwHVjWlkMUwTSzcwxYiv8CvE
      PMAuiXmAp1v5Z/98151gMRFWgUQAnq44NYVl7O7DPFncxt4Q2qcS7UxFNYGEg8tx9Oiuj+lM
      p/H5fPtQmp0TARD2XX5oCG1h8Tvbb7mT5BrEqRA7ZmhFsvkismLD7XHtehLDMjQMyYYYCX21
      8rfukPn44+9sv3cA+gAV9VHYHLvHzbExpudW2cnbFt+YJ/nY7Ly1PcHE9tePSizPr+3oeYTX
      V0XVAJKk4K/yE/T42VycwlfbxerCNF1NXobG13GGq9E314nnktQffZOwnkdyxLl2/TZysJVz
      9TA59Dkbdouzb54hl9eIzE0wvbxOCT8XL/QweucOsUSBY5feJTJ8jbQc4Nz583jEBMJrqaJq
      AJBxulw4HDZy6SQl3SKRSGCUspiuBvq7arAcYd79wdtoiRj5VIKCYWJaMhIWYNHef45TPTVk
      MnmSiQy5bIm+82/T7VdZTUSoaT3Bme5a8rqBYZioqoKhi3ridVVRAZAkO41tbTTWVuGQTe5e
      v8rk0haSrFBdXY0igc3uQFEUvr6c15IkVMliYzOCYVg4HE5kWfn2ajRZxWlXURQZt93J9Pgt
      7ozOYVomqmojHt0iW9DL9ZKFfVZR8wCWaYIsI331s24YSJKMokhYSMgSmKaFLEuYX58NJ0mY
      ug7f7CcjYQISX790SZLAsihko9z44hbpko2LV94joIKFhKoo36wQIeYBdi/2R3/y1E6wmAir
      QCIAu1eYmEBbWf3O9slgiYS/vI0QEYBdEgHYO9FolOrq6rKW4WC9I6+xwsOHmNmXu3b2+7JM
      EwsLWVbK8vefZUVJs5jb3eJoL9Jc1Uqtt27H+4sAvCKJP/8LSrMvt4Tg6+rn+9AH+Kfnf5cr
      vb+x4/0rahRo5MYv+PMf/U/+39UvSea/feMK8Xlm176+OizBnVvTiHadsBMVVQMMvPEDdPMO
      vW+dx4qvcfWLMXwtvfSFSzy8f521lTBnTzWj6walbJTbtx5Q1XaMjhDcvjtGTdcgx9pry/0y
      hAOkomqAx2mlIoZlce/+A0Cm/dgZuoMqa9E4AKO3viSeLzEzOsp6NIphc+OyH6w2sFB+FRuA
      RHQLb00TQY8DgO21RRa34rgcj5Zx9wWqqGtqpe/YEYKBaqpcMpMzog0uPKmimkAg0TPYjwNo
      7OpH3UrQ0daMw+vgSNsWiquNmqAH/2A1bmc76+sRVHcAn0eltr6R9irR/BGeJOYBdull5wFS
      f/3X6FvbTzli/z0x432AXKtKE2t8/o1XdutC21v01fXveP8nApDP50kmk3taoNeNaZrk83k8
      nqdfyHEQ7xFmmo9WXzto9wgzTbPsZRI1wC6JmeCdMQsFjBd8mW7pWRT/3k6E7dZz3hGLfDrO
      ZjRNuL4Rj0MlFd2gIHvx2zQSeYm62qrK7UUL+yp/7x7R//qHz93nIJwM98zPr55Pce/BKIV8
      mjt3h9AMi4nxMUyrxMOhcQqGyfKrXoLQMpl8cIOp5ee3pQsbE8xENRKRbbRXVDShMj2zBshm
      twk1HqO3K4z14C6LU0NMza9iOd1Mjc/Q42+gyqWjZ7f47NodXNVtNFfpTC9ECLf2cvJo854X
      1jR10kUTKb6F1VLF2uw0S5EkPYOnMROrLKxuUtveR3UxTdaycOWzOINuJkdH0Fy1DPY0szI9
      xUaywNHjA8jpNcbnIvSdOk1sbpi0HKK/q57J0WE0dz0ne1r3/DUIB8szAyArNgy9hGVZ6KZJ
      c8cgpw2V4wPd2HQPJwa7mBodJrowS+dbV+jwFvnFT36G7vWRSqf3pbBacgE5eAR3eo54UWM9
      kqWvr5PRkWFCikHL0aMsTozjrpXBbhHZ2CTQUEU8tsXs4hz1rb/G0lqaI511bK5Osb2tcfzY
      UczIOJ/ensammtj0fmbWE/QNtGPBrm/jJFSWZwbA66ujMPY5P58bwlffhduhftWJkrB9tSS5
      qqqEGtv59NqHrIdbqG+vYTlSwOFw7EthZycWWc8tYuZzWLUtqKqCqRWxZAVJkcDQMJB5fLQv
      Ed8g2NDPIPNomFSF6wj4AmSSORRJwjB0LBO6T1ygv9mHzaYSCHi5/2CI9pYPOFjdWWGvVdQo
      0Pb2NuFwGKOUI5HP8/DWXdSqWvpPDDB/63PSdh/dR48RUrKklSqsTBxfwM3U+ASqq5rmrga0
      tIbXbSNvGJiZbaYWtzg6cILo3AhxzUlPdxML01PI/iaOdTZ8pwxiFGhnsl9+WRGd4IoKwJNM
      Muk8Hp8HCYtsOovL5933USkRgJ0pjI2R/MlfPXefD5uzLDWWd86kggNQHiIAeyeRSBAMBsta
      hmd+YVqmzszoHa7duE+muMNVEYop1mO7WyFYOLxKpVK5i/DsTnA6tkjcqOZkjxdN09EVCUWR
      ME3AMtB0A8VmR8WkpOsgqdgLceY3bXhLG+R9XVQ7NDTdwu6wY2glDEvC4bCLkZVDLPPpVWJ/
      /CcA/HiwyFDjAb1JnttXgxa9zp1sDWfPNHP7VpLTg0HG5xKoyXki2DAIcKZW58vVEjajyLn+
      dsBGNhIh52xi+vpHbCRKHD19huUH97FXtfD2e+d46dOfLIul6RGsYDtttd/eXtPQiliKQ6z5
      WQlME/RHLQrD0NHNAzoTLMl2Tl18nxMNNuY2UliWiV4soJngCtTxxsVLBOwGyA4GL7xFT3uY
      Yu7beVetmCWaNmjvaMfj9NDV3Y7dSpL8HteFW6bOZjRFNLKOhUkum2F9bZ2pW1e5M71EbqdN
      NUH4yrNPhShmuPvFp9xbTNNU3YDDWObmyDwen4dsfJWrH3+Cp6YFySxw6+rHrKdUwnUhqrxO
      HP4qgr4Anc3VxOIpZAmymTS64sb9PdbY1LNrqMEOnIU0aa3EvWvX2EwVME3rq5UPBGF3ntkE
      cnjDvP2DH37zuPqdb3+OOEz6mpuxA7mIzvs/vEDoq4GPPh/Ao7t+1J17h+NfHdPe8P0vRll6
      OM3clo5UyKA2thGoa+NYTzsJJY6rtgW3XbSBhN15qXGx2uZvz/Nx1zbzqk5otTf08PfPt6Dn
      kmxlNQL1NUiShK++ieG7X+I/e4Gw92ANQQoH28EaGH6BlpYWAGzuAI2Ppc7uq+O9d3e+GJJQ
      PpLdjvzV2L/HWyLoEjPBFUVMhO2dAz0RJgj7TVHKv0zNwfpKEF5r0f/23yk9drO8v+nMMddY
      3u/gigpAenOeW6PzeEL1nBrsw6E8Y05ZS7GdcxIOHKymyGGnr2+gLSx88zgWKLLgPKATYQdR
      djNF/zuXaPKZrG4kWJqfQdMNisUiheJXF+9oJfLpDVa3C5i6Rr5QwDAtDMOgVCxiGAaFfB5N
      3PZIoMJqANNIc+OXn+CzuzlzvoeF0Qm8RopPFzL4tAz9595gevgekpnG1Rrm/vWPWYykaex7
      A1digq2ih856O3enIvQOnGWgU4wcHXYVFQBZ8XPpykXMhSmiicRXW1VOvvkOVdvDbMZy1B45
      xhF/juENg/WtBK0dR/C6beilai5dOI2Z3qAtWSIVi2N21lVWFSjsuYr6/9s8cOvDDxlZ2KYq
      4CdQFcLu8eNWwOb2E6qrIrs4xRcPFvD6XPR2dxCLxrEkhWCoGkWS0LUiqXQOj88rzkoVxDzA
      bol5gJe3+fv/geLk5DePxSWRFUgE4OWZ+TyW8e0HPl7I4vQ9fYnJV6Wi+gBCZZNdricem7kc
      Xoe3TKV5RARAKIvs59e4Fb/LYtX+XBH22wP/gKZgywv3q6gAFFJbzK9uo9ictLV34HhR6S2D
      RCpHMOB7JeUTdq40P8/46mf71gd498gPaeLFAaioUaD4/CKax4Pb7ULeyRCOUWR8cn7fyyVU
      roqqASyryML0NAm3H1UrMDQ1RiFlcO79iyQ2czRXQVyXiS7MEc2X6Bs4DUByY46bDybR8HDx
      7WPc/uQ6JUnl+IXzpGYn2MgU6e4dYH36PhklyNsXzuB+YfUivA4q6r8sy17OX75AGIns2iq9
      Z96kOrFCRPFRyiyxpsuE/HbGV6LUBNzkiwUANrdjnHzrfWzrt5mPS7T2nqIjpDG+PMvIfITa
      kJeCpuPzukkniuR1QwTgkKioJpCklrj58cd8fv02ecuGTVGQbQ5sip2Watgs+Kipb6E5aEdS
      bDhsCk6nnfqaMMPXf8mNJegIGkwP3eCXd+apbz9KV9iFJKvYVPnRcKFpiWuLD5FDNw9QKqTY
      3C7S0vz0cfwXEfMAeyP+Z3/OH63+1b51gv/tlf9Ef/3AC/c7dAH4vkQA9oYeiTC+Po2jIbQv
      z98SbMVtf/Ek28F5R4RDRa2tpcPlwucr7xC1CIBQFma+wI3r/5dsw/O/pXtqeumrP/7cfb6P
      igqAUSqQzhWQFTten7uyevDCE8xCnvt3f/rCPsBvD/zDfQ1ARX2GNsfvc2dykvnFdZ71tkUi
      6xQKYolEYWcqqgaQJAWvz4vP6yWzOc+94Wl8jUfo9hW5/XCZ9u4eZkZuYMoh3rh0mtmRYTR7
      kMHOOoYeTpJP5Tn53gek5+6xGMnTd+ocmZVRInGJlmYXD2fW6R48T1d9oNwvVXhFKioAIOP2
      +XA7HcS21jj15iXu37mNWt/HiX6V2Y0cfX39BOs6kSKjONvPMBDUKcVjhNqO0aOuMrqVIZ9V
      eefiWdIF2MqbnHrjLHoqzmCfysLGtgjAIVJRTSBPTSOdLS3U1wQJBX3cv3UHf7gO9AxjE4vU
      1NVQHw7y4M4tzPpeivM3uT06j+QJUFflQ/XVURfyUe81+fTabbKaQW1zK267glFMMDa5Rl19
      dblfpvAKiXmAXRLzAHvDSCT4wz/9PUbqn99f+43+3+Z3Bv/RvpVDBGCXRAD2TjKZJBAob3Oz
      oppAwutFlsv/8TtYXwnCoWGk0vyfH/9HFhp3tj5og7+Rf3Hx9/a8HBUVgFwshhwK/co9xixi
      sTih0HfPKSnmEuQMF1W+/blzvfDyLEMnEpljyrazk+FKxv7cUbL8ddAupFZWSANgYZoGum5g
      WbCysophGI9ulWRZ3/ycS26wsZ1/tO9X7WBBeFxF1QDfMpm+9wWji+u0H38P0ltc+/SX6PZq
      jjap3HswC4FGLh0LgJnn2oefkzL9XPrgIgFbhb5kYV9UVA3wDb1IsijRUB8ksr6NzVfDpffe
      o96tMze/hDdcT53fgw4g22lpbcFnL5HMlveetMLBU1EBUN0mN3/+c26ML+OyS2g4qQ158Uh5
      Pv7FJ+i+Bgb6ejELKTQk7A43HodMoZCnhIrLJhZDFJ5UUe2BcPdJfrP760c9j/2mla7HLv75
      oPGbnQgCNL5J3/4XT6hAYiJsl8RE2N6wTJPNyCp2/87uMarKKn7n3k+aHZx3RDhUJFlGlh2E
      3OU990oEQCiL7PXr3Es8YDlY3oGJigpAMRNjeSOGyxuioS60s9XhhAOpND3D8Oovyr48ekWN
      AsVmZ0lKsDI/zlo0V+7iCK+BiqoBJMlBa2cXeTNDIbnNF2NTpApO3r58mrtXPyRv2Dly6i2U
      2DQza0laeo7D9iLraZ1T584RdB+szqlQfhVVA5hGimsffcRG3kONTyJfMsiuz7CRlajrOMaV
      d06RiK8x/GAWw9RJpbPohsLZt94gID78wlNUVA2gOqu5fOVtQkBmaxnLNPEFAiiYzIzfYWG2
      mr6zbyK3LbOVlXA47LjkAA6bIu4HJjxVRQWgtu/b6SxvTQsf/Nqj9d/1YhHp9Nt0tLYC0F7z
      a2Upn1B5xETYLomJsL2hra0zujGJWh8sazkOzjsiHCq2xga6fV6xNKJQ+TJXP8PMZHZ93B1n
      gkKDuEnejlmmQaFQRFJtOGw2JNGzPRBSP/0p+uraro+7cwDuE1xRAVgcv8tCvITd7uH40Tby
      spO6wM5OphKEp6moABimidtXRWdHG2ujX3B3I8+5Ny7D1gSL20WODp5GSa+wvJ6gu6+bkfvD
      OIONnOxrYvjePVKpEifee5/k9F1W4iYnzp6h2iuuFz7MKioAncfP4l1bZm58lLa2Y5zr8nKk
      zuKLuQDvXWzg5tgKAStG+8A53MV1dNNifWEcp1uh5ehZlI0RYukIo8MLeIIu1mMZEYBDrqJm
      gpemhpmcWyJbMrA5JGaH7rAQsZAKi1y7fh+H14/TEyDodVJIJTFsTrxuO167nfHh2wxNr6Da
      fFRVe/AFQ/hd4sN/2FVUDdByZIDaNh1FtWNTJX5wOYys2ml974eUdBO73QFWI7IMzs4B3mvS
      kFWFUjrC/MMMOSVIXcBHxw+voBkWdocIwGEnJsJ2SUyEfVf2888xM9ldHzcRKhHzl3cor6Jq
      AOFg8ly69FLHdW5vcz4c3uPS7I4IgPBK6dEY2soKABtymrXS8p49d3/9IIq8s6UWvyYCILxS
      haEhYv/jjwD42R5PhP3oH/8vFNm1q2MqKgCbM0Pcn9vE4ariwpvncO+g9OuzwxjVvUjpNeqa
      2lEratxL2G8VFYCtaILOvpO01YfIJzbRnEGM6CZqYz2LQzeIZFVOnz1LemWcmeUobcfP4jA0
      DBMUCzAK3L1+HTPQyrFWP/fuDFHVfpz+znpxvcAhVVEB6D/7JlOjD7g+P09djQdf2E1pdRVH
      bRjTEeKtDg+ji5vY8hpvX77IrTsjtFc/+srfXF/Dii0xGc3jjgxhl46gyS68ThtYIBJwOFVU
      g2B9eQFcQTw2HZBYW5pnZnkDgGxyi9mFTZwuB0Ypy9zsLJbyZHvQ7vHR2NhK/+BJGsM11Pjt
      PJyaRowDH14VVQNU19RSisRp7ztBtUdldW2Dlsa3CQArioK/voOG+hpGIzI2h5fTJ5pRzTzY
      VKqPDeD2ujCXV9BUF16fh0AoTENXnfjyP8Rei4kwyzTRdP2bCahSsYjN7tiX06XFRNj3U3w4
      SfbzzwH4rDrNdsPezcb/k/O/i02x7eqYJwKQz+dJJpN7VqDXkWma5PN5PB7PU3+v6/qB+KA9
      zjQfrb52EO7J9TjTNMtepteiBniVRA3wcixNw0ilnti2rWWx+cp7Pccz35F8OsZW/NFlbv5Q
      HcGnnDas5fPgdGJ7QVsjn8tid7pRxFqGh1ZpfoHNf//7T2z7ywNwRdgz6x9DK7G2OMn0/AYl
      /emFTMzNETVfvLjpzNQYudIeLIJqWUwN3WR6Jfr9n+tXFLNJUnltz59XONieWQN4Q/V0dqRI
      GWFqfXD/y8+JFi0GTpxkZeIO0ZKLI0GF8c9+iao5OH/uGA/u36OYKdB76QMSE1+wmbbo6D/9
      6An1DJ99dIM8dgbPnCE2M8xKIo2/tpegmuNIXxez02t09XSiPqOiME2NVEFHim1hNVeT3Fxk
      eilKz+AgkZkRSo4aWmtsTE4t0943iC23wcPFKN3HjqFtzbMULXH8xHHiS5NsZhX6+roppKNs
      rcaobvCg2VzoiXlm17P0D/SRXJliNWVyrK8Pt/1gtZ+FvbGjRmFxa46xtSRhr43N1TXsNV18
      0N3C1sQYJ986ibowQaZgUNvZT58nxXA2SkFq44N3w1wf3cCvQH79Id7ey5z1JJmcG4FgBx+c
      c3DzepzaZhidWMbl9T7zww+gpxZRqo7iTs+TyEQZnY1xrLeVzMIISXsdXWEnt69+xFZRYj5a
      oN2ZpuhuQpVLPBiexNfWQzG9xuKWSXtIY3xhk+zMTZpPXMZMLRCVJCZv3kC3SiQND6wPU9V1
      RqxC/Rp7bgBkWUaxJOyhZqrtcyiqg2C4irWpIT5cWaUn7MetKsiqiizL2O02ZEXFpoQo5D/h
      5x/P0Nx3GiWTw1XfzvbVj/lUUTl++gyrY3f5xXIJyd5DsK6N+yOfcvr9X39uYWcmFlhJm5j5
      PGYghCIrqKpKCQlFtaEoYPM18O6lQSTTwobGxsIUE4tRTpw/z8rMPaY2ekGWURQLy4BQYydt
      9UHiC4BpUtV8lBPHu7BQMVveYm5mluVImCNN5V3ASdgfzw1AuLGbr8/W/ru/9VvfbG9tuPLk
      jl39jz2opR+g4Tce21YHwJXf/GqbUSDmdpFOWbR11rI2N0Wwa5CQ8/nNjPCRkxyrqcEo5ojn
      Deq924yPTXHs1CncUw9YKNUxeKKb8Ylxatt78JtJ4rqLvtZ6UstT5JytnD7awdb8OIsphYHj
      deRTDiRJwhtuRVED1NjyTIxP0tU3QCGxDe4amuv8zy2XULnEMOguiWHQl1NaXib+xz96Ytvf
      tmVZbNzd+ft7TQRgl0QA9k48HqeqqqqsZRBDG0LZ6Lpe7iJU1slwQmXSIxHW/9W//s72/328
      yEijuEnejpl6gZG7t0iYPs6dOfHMsflCoYDD8ahzK5SfZVpYhcJ3tmtakcIzJllflYoKwNrD
      EVztp+gLqoBGZH0Ly+GnJugivrVF3lSpq61hfX2V1rZ2Epsb6DYvYb+LQrFArgROCiQLJrV1
      ddgVEZDDrqICsJGD03U+ZGB9boSlmIGRekjp1Enmx2bxuSGlK2S3NgnZi3z4xQSyovDGiX4m
      ltc4erSfkfufoNYcJVhdg10p7wiEUH4VFYAGD0xtpOisspFM52lo60dZSZAoytQ2tdPgyTJf
      etSxyifi1HQdpyvsxItGW88AHQ1VuIzTLK9ssBXL4G0IlPkVCeVWUaNADT2DlBYfcOP+Qxo7
      jrDx8BZLUiOdfoPZkVsMreQ50hymrr6R8JFT+LMrLK1FUb1Bwr5Hl0emoxEyhoPqqqefzy8c
      Lq/FPICh5UmmdUKh/b/djpgH2D09EmHj3/y772z/yfESI/XlHQp9LQLwKokA7J1kMkkgUN5m
      aEU1gYTXS7kvh4QK6wQL+8tIJNj6g//yyv7ez9qzLJT5XKCKCkBma5GIHqCzIUh6e5nNvIvu
      lqevLhyNRakOVb/iElY2S9cpzcy8sr+37SkyYz+gl0QeROnVbR6uzmFZJiszw0yvxLFMA03T
      MAwTy7LQNQ3dMFldXXm03TSJbqySzJUwDB1N0zBN65vjTNPCfOxn4XCpqBpAkm00unXWYjFy
      agi/LJNcm+aTm6PYw12caVYYmotQ39ZHJrLE55sbSME2Gj0Fqp1uPv7wU2S3m6rWXtzpRR4u
      bxNuH8CTnWE1Y+P0hbdoCom7Th4mFVUDAFQ3NTI//pDqcDUSEIkmaWxupBDdZtQd788AAATg
      SURBVCuV48zFdzneVY+vro0fvHuJave3CyU1dA5w+e1LeKQES+tx6puaCXjsNLZ0UOW2kUyn
      y/fChLKoqADYfT78niAeu41QbS1Bvxu/z006U6CuoY7mlmZGv/yE0dkNvF4fSAo+rxuPx4dN
      VfH53EiKgsdXTd+RFlLJJJasUirkyJd03K7drS0vVD4xD7BLr/M8gL69zdq//L1XVKqDsS6Q
      CMAuvc4BsEwT81dWb9tP0VIW+0FdGU44fCRZRgm+wtUvIiWCrvJeEikCIOwpPRoj+eMf72jf
      uy06S0FxRdiOFdNRFtdjuHwhGqo9lFBx2yvqJbz2zGyG7KdXd7TvyAHoA1TUKFBsbp6sqrCx
      OMHC7AIrMTFsKXw/FfX1KUl2mjs6yOspsvkSMw+uM1MoMfiDXycy8hmRlEZL/zmKS3eJ5iwc
      4Q4G6hTuPVzAFWqm1VVgdGmL9t5T9LaW9wbNwsFQUQEwjRTXP/qI5vpOjtXbkWqbOSovcz+a
      AXcTV95o4PbtNVyBet57o4/xySlmxx6SMZ2Y2SzuGj8SEXL5fLlfinBAVFQTSHWFuXzlCucG
      u1FVFYeqICkO3G4vZFf4+YfX8TbU4rI/WhHCbnfS1NmKYpg4HA40XUeyLLQyr0QgHBwVVQPU
      9vZ+87OjupEOAAL0AdR98Niej5o3vUe6AfjN7m9/c6W9b59LKVQSMRG2S6/zRNheMAsFSjOz
      O9r3oRbFVl/eVbfFTfJ2ybIsDMN45ofJMAyUA7bcimVZWJZ1IK7AetxB+LIQNcAe0zQNm213
      t+rcb6b56FqJgxbMg/BeHayvBEF4xUQNIBxqogYQDjURgO/FIrW9xur2o1OIc8kIw8MTZIo6
      lpFnfOgB67Esej5PtljELKbYTn53leT9sLUyy927d5lfi6EXM0yMDLOZzEEhSbJgoRUyJFK5
      V1KWx5lalvGhITYSOYxikUw+j1XKsJXIUY6miAjA91FIs5ZMsbkSwdILjI7NEPTB8NgCD4fu
      YwuFmR0ZIhFPEEklmBgaB9ur6Ygur67R2NJGOOBifmwUyRdgenSEYmKJxbjO1PgouvLqO6DT
      o8PYq6qZfPCAbCbDRnSb6bEJ9DItZS8C8BIsy0QrlTDsPnq7WrHJEoam4QzV0Nrei9dMkJKc
      dDc30VFrI5YvMXT1FxSqO6h27eNYvGWhayV0o0RiY52RkTGyuk4WH0fb2ggFHGglg3uf/wzN
      302159UHQJcdtDY10RG0Edd1xm9cJe6qp97vpBwREAF4CXohzb2bt9lKf3tOkSxLFAsFdD2H
      ZjmQdI2SYZLNWTjtdgYvnCMXWUXbz9PfzRITw3eYXU1w8e/8Dj94+xQTw8MoeoG8oaNrGrIs
      c+LC22QjS2jGq290GLqGZhhkCiYuVaXv9BmMxCYFvRwNIEuMAn0fejbKFzdvs7mdo/f0BXyF
      NSaXY3SdOE+DEuPa/WkCDd0MNgVJKgr+UpzlYoC+1n1esMsoMHz3LhvxLI1HT9DkSHJraI5Q
      ay9nGnRm6aS2tEBED3Ck+dUuHpZYn+HW0Ay+xiOcaguzXSwSkosspO30tdfxaltChgiAcLiJ
      JpBwqIkACIeaCIBwqIkACIeaCIBwqIkACIeaCIBwqIkACIeaCIBwqIkACIeaCIBwqIkACIea
      CIBwqP1/tg9i1bw3DnAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 17' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Shipping cost analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trendlines' width='192'>
      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
      qOb/A2LPUh+s18OIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='84' name='sets' width='164'>
      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
    </thumbnail>
    <thumbnail height='192' name='setsII' width='192'>
      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
      pgBM9jT/P6lckJzzlnbfAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
  <external>
    <shapes>
      <shape name='Categories/furniture.png'>
        iVBORw0KGgoAAAANSUhEUgAAAFAAAAA9CAYAAAA6e+4pAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDE5LTA1LTI1VDIxOjQ1OjUxLTA0OjAwmVkJEAAAACV0
        RVh0ZGF0ZTptb2RpZnkAMjAxOS0wNS0yNVQyMTo0NTo1MS0wNDowMOgEsawAABZ1SURBVHic
        7ZprkGXXVd9/a+99zrmPnu5Wz7RmpJEs25JlSciJHGMgiW1CwE5RMSSkysQEV6Bw+BASSCgH
        PpCQD5AKGFOmbEgpxgkYqAITigpJ2STgh4yNLTtS2bI8yFiyJPSckebR3fd5zn6tfNjn3hG2
        HuPITiDV68vtx73nnv3fa63/f/33gcM4jMM4jMM4jMM4jMM4jMM4jP/bIV+Ni7zyjf+Yq6+7
        ifH2UQajAbs7lzFqBrQxMG87BoMRg9EIV9dYA8v5nJwylTO08zmVc3gfCABiWS7mnHn0YT5/
        z+e5/roXsoyRk8ePE5OCZnAVtXPMfWI8GjOoKzrvySmDtbR+gdFMUw9oBjVGLBjhYDHni198
        gGvHFb/x0z/51Vg67vleQI5eyS/91q/x737sp8aDpjkyGAykruvKOVc71FobjXE2W2vVGKPW
        CNZaYxB1zqaqqvKgqrKISWRFxUTnXEoh+j9577sPfune8/zw336l+fY3/iNzMGupnIppGi47
        so11QyvNQCUZrCCVs9LGqNF7GVQWTUEdFeO6IqjIwhoeffSh/BO3vqe7674H+dx7f+V5A/hV
        ycA3/8J/+s5rrn3Jj7qmuQIR46ytRKiyqo0pG0EygiqqRgwGMSpgjYkpJRUjCcghZYBQ11Wa
        TCaT+++79+ds3exeefKqb9nZ3hoYYwxkmzI5qxqgrp2jqpxaY4wz1jSV05yzqGZRSEYEa4wM
        6lq6GM25vb1FO5v9h7f+5E/8j+mnP67Pd+3POwOv/Y7vaUY7O/9Uq+pvXZjO8N6TY0KhlBsQ
        U0YEDJBVsdZirKWpK3yIiBGMMSRVKusYjYdkEWzV/JRx9fHWh9396YymrqhcRUyJmCIxJVBB
        DIgqmjPNoKGuKlLKxBgxIljn2ByPMZVFmgFWOfG9P/TDd/zHf/Lxs893/V8xgG/5zT8k1gZU
        aNuOO2/7/UGG4/PFgugD3bKlaztCihhAVUlZscaQNYNqSXsj1FVNSGkNoBhDVdXMZnMW0ymP
        PfrozYPNLRSYHBhEMwo4Y/ExknNCtSRReSnXttaCQAwREUPT1GxsbLC1vYmpK1B9kdTuyp/7
        xKmzGUg5Magr3vINN33tAfz573ktb/mvt50EeZG1Vq79ulsGdT3YUYVl2zKZTkkxknPJvlzK
        EjFCVsUZC6qogO8CMUUqVyHG4JxFMrTLJcF7fNfiwojFfAEoIURSDDhjiCnjrJSNQRCElAIp
        RkQpAKYC6KCuCW2HohzZ2sQ621jX3GKsHaHqVfThm2+58ayeej/nP/oBdL7P7o+952sD4Pe+
        /d3NaGf353PW7zg4mHD2ibPhxOW7myB0XYfvPMF7NGdSKiUk1iJiECP4HlDNGU2JGCOdtVRV
        jbWWFCI+BkAQsXTe03YdIpBiIsaAz5mcM6IZay0ZKd8XAjvLC3zXbodubPKnc8fDrWU2d0yD
        xxhBRWhGo+HZCwfvyPZhOxwOY4a73vP+29/08jtvfWz6xFn2/KXD8hUDOO/Cps4WLwvBj8+c
        Ps3k/DkEIYSAb1vaxZKuawnBk2LCGqEZDrHW0tQNOWe6UCSH7zoAqqZGs1I3NW1OxBCxzpJy
        onYW5xwxBnJKaFZyiuWzKWFchXWOHAOT/QnXpyf59hOegZkRdwccSM0FrbkQp0hzgI9PwrKR
        x9nbMvuPUy8bjOrf+Lr20X/VHL98j9H4smHI7wc++DUBUFW2fYyXzWdzDvYPiL7Dp8xysWA5
        nxN8Rwyerm1LJqKEGDHG0FU1OSs+BFIK+K5DrGWUN2AIzhlAyDGiKZFiwvtA27YE37FcLAg+
        YFFC10JKYAyaM7FtmU+mDMcTYtvgpYOlZ9NktozhRcYgHmTpUFVyjLBUUkiklOus+i+nPuBb
        32ZjP3CpeHzFAGZ0J+e40XUt3XKBiZEUAl3bFmBiwPsC4Hw+AxFyVowRvCulGUNHCIHlYgZi
        EQRrDdYYnLU9qViquibnzGKxIHQt89mMHAKEQPQdoW1RI+S2I7UL0nLB5S/IWI6SQiptAkVF
        +s1Xck82mtJaJahCzJnoAwn9A7OxedvXDEAxcrk1ZogqOSessXSdJ5c7wzrHcDTCOsd8NsWH
        wPaxXZqqonY1VeUIITCZHLB3/jzbx45x7PjlaFZQiDGSUiYDoesY1DWoUhnDsK6ZtUtCu8TP
        Z3TzGVLVEALZdzjfcu3GEM2J2BUZIyKICJmMiAAC1pKtQ30gx0DKmdB5fIxeBs1vjmbz5dcM
        QGfdSU258t4TOs9oY4RraqqcaQYDVAzjuhDC9tGjaFY2NjeLvJAiVwBOytVc/aIXM97YQFNi
        OpmwXCzxPqA5Y2x5X1XXbG7v8IIN4cajDZ8/M+HsZMG58/vMZlMGG0cwYsghsBNnXD16lEk9
        ILgB0lS4JhKoSGaI2goZjmE44uwycOTRL7L1xMPgLK5yqOPupTG3Ta95yaXj8ZWAd8PrvgsR
        2U0poZpRzdRNQ4iRZduSUmFFgKZpGB/ZYDgcAfQ9LZJVqZwjpsjxy3dJMXFwMMEa05ex0PlI
        9LlktQjL5YLNI44bjjhefuIo2BOcPjdjMByQKVKpbT3b2jLau4wvVJts7R6lDR2b23NmM0dt
        tzlzbo/LNobMZlMeOX2WV04PUAVNRTFkJ+/7a2//n2dFLn1Au2QAf/vue9m57iW8853v2q1c
        hbGuzPWuQnOZLpJETD8cdd6TUoKspJTIKZNSwgdfSkoVZy0KpFT6lYihbhqqusZ3Hh8DIQRU
        YbkMLDvhqqtb9i4IGyKMRMiaWXQt6j2dCPdVm1hrGQTPE+cOePI8jBph2Ew52NvDEXhontlc
        TBlM9ogGSErQPPFaf/DWP/gw7/7UPfzgN16aqH5WAN9z9/1EhaSGMyHz+Kc/t3XTjTfeUNUN
        x09eRUKwoSOn0kNCCHRdR9FwgnOWqqp6wVyAiLFMD4Us+jEPQfuGXlmLMYasha3rnHEItWQM
        wv75iocf3Wc8HHLu/AXGo5qz5/aLs+M9OSmDQYX3hul0Rl1ZGqdc2J+TkqeLnvP1DrvzGWG5
        JNc1lYOz2yer21/6+itPjLeraUzh1v/1pxgxJEn80NffeOkA/vp/eS93yxZtTPybt9/K2//t
        j29O5+1LR0ZeE+zGtx6vmtfsz+fY4YCNjQ0eOfUAzWCMlV5I+yJYRYScM0ZMmY9XjIf0U4TF
        CGQFY0rp5pwI1uJshQqkELDGURllpyqf39v3TKYzciq6sGvnHEymDAcV+5M5g7pCZMBUlL39
        A4aDCkNgOltgjWE2mTB+8mGaxx5iIRGXYZIin9jYHc6GR98xzuYNg9p91Fn7R9ubm/e/63f/
        ++Itv3cbOUXccs7b3vT3nx3Af/47H+GfvekNO2rzN73pH7z+Vffc/8Crm8HwJh/TzoWDA3zM
        hFQYbTAYcjCZEh98kO2tLXLO5H7WjSmRU+l5IUREFWMNGSXnQiirmatyFdpPF845rLXUTdPL
        DmVoEiOTidkznc64sL/PdGZwTgg+Mp23bISGvf0Zm0dGhNgxmwvnLuyxvTXmxddfz+LhRwjz
        fRBDvZixf+YJ3LihaSrun3ac2qnZmUyu8MobNrc332CdO/PIuQunXnHzDZ+0Ih/Ktbv77/6d
        V11423Nl4Gtvuqb+zJ2ffmuGNyEyEDFUdcXGzjGGm1sMmgZnLDEnvO9IMTI92Cf6lqpusMaQ
        UipSJEdSLgAaEQRFFYw1CErue+cyFfAUpapq6rrGe08MHt91HDu2gdUFTzx5jkdPn+X0k3tY
        C6Nhgw+JxdJzZNRwMJlzsFhgxNDUjrN7E0JOTJeepY+QE5Ii+3sTHnn4HC85vslw4PjMucD0
        5iGbWQk589Bjp1nMZidSiic0529TzT/SLtvbT91xx/cDZ54VwJlP7okzp1+aYhqoKtYV3XbV
        dddzxWjMMivGOnwIhBAJnScuFoRlg60cBkgpg4CIKSzXg5VjgEKsxX0RQYTeShFElVR1+DmA
        UI/HxOWcWgZ85vMPMpvPOZjO2N+foZqorUWA6aLDGiWlTF1XkDPDQc180TEcVJzfnyIIV+xu
        U9cdZ89P+cLpKeeXnqs2G1qtWMznRUlUNU88fppzjz+O2NKLc86bFrllYzjYek4AT16x255+
        7PT91ppX56wYBCvCfH+P+WzOaGODUWNprOGaq65k8OpXAWB6C2k1TdieDIwxGJE1kAIYY7H9
        jFtVFcZarOktqJSYT6fce+oUf/ZnD7E7uIKjR0/gj1/LlnOcSJHgA6REShFyRnMGFFVFc3kV
        KYDmlBAtCqAd1gQrDHdu4viVt9D5lifiguFywnA8pAuRsFgw2d8nhEBtBpAzxliM8EDu2tNf
        iteXAfgn9z2QnXGfjpq/L5f7ALFMDw5wjz/GzvY2vnJY67DWcOKaFxTPL+W1zyfGYKC4H6oI
        hSAAFMgpkVVZpsQixZ6Fi2eoqtim5qZv/Aaq8YijL7iGg8ExFoslcdlyMWEdxlaILZkuvUg3
        xoBmYkr4WL7TGkPOmQlF9lBB9bITJXtjgpQYes9iuSTO57SzGdZYckpUVQUi+K69+8U7g+kf
        PReAn/rFt/L1b/7Rz0piYY2OV7vrFwvO3HOKePJq5u2SpIo1FkGJIfRMavryFQyA9PKkJwNj
        LNYYYirjWumLT8lMMWAMSNGX8/095ouWL3z+C8QQsM5Cmfj6FlBK3YiULHZu3S4KKWl5b6+L
        V6ZtGe36v0mpEIzBOceTpx9DXMVoNMbacr8qxNraPz47XXzZEcDT6kAR7s05PwTclFJaS5J2
        MkGuyAyqGh88RkAw2KoCBBScsxdPWlSJCVSU2pb/90vG2QKyAqk3X+nnVmssMUTmswW4UuKm
        NyWEPuN6D9CuQKFMFCJgERJC7SzGFrcmqyJSMtRaR8x53XKMsbi6QlRZTmcMt7aLAWJLSzEi
        Zytr7nzfO372y7AyTwfgVUfGZwXuMKvS6HcYY2hnU+q6MHGOCaGMUqm3oFTLzzmtMkD7xZc+
        hCqiGVImxTKpkAs7C1KUTY90jJEYU+lByNoPNCLr6aYYs7m3vjzeB1KKxVCIEe8DnS+a0aiS
        Yiy6NGXISu7Hz7qq8V1HRjDWkTWvbTiDnqo0P/R0WD0tgI/vz1NdVbfZqkrWWRRBxGDrhuV8
        hnEOMbZkG2V6cD2JhBAKIWgp0dq60rS0OCFCseERKf0FWZe/EUGzroHUrBhjcMZeLPFVOUrJ
        vKysz0VcP09Lf00REJS6qnDWkXLuCQYqV6QUQO0cdV2xd+4cYmzRqinhQ0CMQeHjH3rnTz+t
        Q/O0AL7rl/8FzppPKnpG+kNpV1XYpmExX5Td7OfYnPPabxOgT6We/tPFTNHCjiGG9feUhZde
        ugJvlX1ZFYxZHwXQ90trbF+Ghso5nO2JA+m9vtWGWIz07N5/V84ZtIj4nDPWWAZVhbWGdtly
        4fx5bFNTVw1103BkNAZlLjl/9Pv/9c88HVTPfC7813/gR5pg6t/O8PdCKPotes9icoDkxPjY
        MbLYMq717FcMAeln2UIOVgyllQtrl6MHc/1/kTK1pAyaST7QTffZf/A+mu0dNq96Idba9UYZ
        Y3FVVS4F9GKSHDNiijlrjEWMLVnYmxcrb7AQUakQA+CLmz3pAlvHjjHa2ERVGTQNmsJnTFi+
        7mO3vvXc0+H0jGbCfjXoRj58MIv5TmucpJwwzlE1A568/z7OnLqLavsypBkixq34gadaQWIM
        0ttb5SRuVaapz7Y1BGudqCEWSz90pKD4/Snz7otYWyGu9GHTn+yV7yiHVmuHWUp7kL5N0BsV
        0gOtqkhKxV7zS+J0H7+/x+hF13PshdeBmL5ayp2p6kevHW+e/9gz4PSMAL5itsc9bvQxcfac
        at7NKa1vbLR7nMHOUUxVoU/Z1ZIHpdljyt9Mr+2kL0ERQ06xZ1zTLxrWxaC99LCG5H0xG6wr
        OlIoz7n0fQyR3nx1vX1/UdCTyw2tzotVtYBKKV8Rg82bVFs7VLsdg/EG1tq+L0NVOVJK3uZ8
        23nfPuMTDM/qHL7mB398Y9/794kx3xy8L+tLiRBD36gLG5b19zuu5RCpqooVb0SKFDCGnFev
        2s/DkGK8mCk5Y2wRsCKGFEMp854VBcEgrNS09NcSU8hJBZxzhf01s2ob69X3G6ArQPv/xRSx
        YhiMRlR1TVVVNM2Atmvvq8nf+olb//0jz4TRs/qBL6yZ3bkIH6+awTdLr+KNSDmeVC0AGdvv
        aD9N9GfAUBa2njAoBCAiiCtzr6qWBfeLzaymmDIjW9OQNBeBnFdPNZRr0s/RIromGKRkrrVC
        Wt8T/cb2GtFZUuxBN4IRS0zx4hMOOffjYEZUb98e1Y8/G0ZPy8KrOAgKKX4y5ezF9m4KlEcq
        +tMuEVNAo0iLrLJmYe2fV4GnNPC+R+b+EAkKKYgI1rrSCoysny4oo5miKa/75mqxOWVUQDWT
        Na+vmXq2zb1sMb2AVqU83bDasJTRnHpg3UUyNIZQ/LgPp0z6Pwbwv/3y2xCRL6jqOURIWYk5
        E1Ii5zLCdV1bRHIPWEpxpWTKYgGkt7hyOUfRGFCBLKXcc0q9SM7kXHzE2D/3IhQgih5TYo69
        0yP9wZPgXIUR05dvf/rW34AAKYUe/F6+9EThnCMDxlWoFOWQFEJKxBTOGNHbh4NnPx95zjOR
        IfLYMuXPKnoip2CQIg9KVgEixH6BSbWUjilidjU+rSRE1kz2iUw/bsW47keoIHY9oSKmz6TV
        vLyeBEtZZtUy/4pB+hM8pf97T0Tas7UYW1qJq8oURFEIakzvUZbWk1MiBo9Vp1n4sEnhwd/7
        2bc+Kz7PefykwCte/w9vGU2f+J3ctdfNZnPG43FJdUpvUyjDubFkU3Sd9jpAVpIi5/5dsiLI
        MvqtjjpF+omnLA4FjaV+REHMRbcGermk+c+VXemTGbv2GUt5r6VV3w6kJzdDeSwOzXjf0S4X
        bGxt0xw98bFzm5f/AKb+4qf/85d60H8+njMD3/zG7+PIH//+mfFl2xpCxs+mTx7JW09K1p5I
        6AVu3+ClaKgsitGLzV1691RXxrSW2S6rqqxJQCiPEUp5v1qJCFYFYxJiYK2P0IJhqQLpBQCm
        PAGLEdH+eEFUSybrelQsG+gQFUSTZtrgiRf2Tm5oO7pyo368+tXfuj++/HXPBc9zA/gr7/01
        vuWGF28mlSNdTNol/Rls9RuRJCmmXqQKYNQYIyJKTFFTsajE9OVsrRNECgsWhwPjjKhCTllX
        mVrXjSnHpCKGWtQYbE8oGMWIFSUrokZEykasFFQP7+rwXvOKobUn8DWoRSRAdsYQyZqXraQL
        +7/gffzuLsSdwd/8pvp3P/6H3fMGEMC6ZivmOFoGv9dlPqJwHlgL1dXu62qOZU2wFzVY//4V
        C18UzyuP6ykTzFPYWtavq89/yUXlqT/oxTcJ9NZO/7t+ydufUh19pYScP+JD+G7fLrc2trYa
        4KsDYBaOdtFvtjF9SprhAx/43D2X8rG/dPFXTh6/o41+vljMd2w9HAKT5/rMs8qYVXgfZiHn
        D2X0V49ed/P0ed/pX9DQ2t2bMu9uQ7iz7brnJFi4xAwcbl92+9Dw+tfe/PLu/Xd85hnnwr/s
        ISlNXviyv/qWbraofFR/KZ+5JACrqkqZnO6657Pcddcdz+8u/wJHp0J7cJCb4birhtX/69s5
        jMM4jMM4jMM4jMM4jMP4/zf+N0g3jvSdGWOlAAAAAElFTkSuQmCC
      </shape>
      <shape name='Categories/office.png'>
        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
        AElFTkSuQmCC
      </shape>
      <shape name='Categories/technology.png'>
        iVBORw0KGgoAAAANSUhEUgAAAFAAAABQCAYAAACOEfKtAAAACXBIWXMAAA7EAAAOxAGVKw4b
        AAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDE5LTA1LTI1VDIxOjQ2OjIyLTA0OjAwSUOhlwAAACV0
        RVh0ZGF0ZTptb2RpZnkAMjAxOS0wNS0yNVQyMTo0NjoyMi0wNDowMDgeGSsAABxfSURBVHic
        7Zt7jCVXnd+/v3Pqcev2u3tmPAPtGc/Yw3jXxmG9ZsFEi5GwhfGuvCHJQlBICCIBKStLgBRl
        rSy7WmQpSEH7+NchCtr1CsULspACMsGLF1uAjYc1YOGxvR577Hl0e7p7+j761q3HOb9f/jjn
        1K3bMwaSEIWg/kk1t2/dU4/zOb931QB7sid7sid7sid7sid7sid7sid7sid78ksn11xzDQDg
        z/78z99w9uzZeweDwUd6vd5VW1tb0YsvvohXX331/+0N/iLL6uoqkiShY8eO/dO3ve1tT508
        ebLO87wYDoc/2tnZ+dJwOPxHGxsbMyKCL37xi//L51f/F+75F0rm5uZw/PhxSuL4+tFo9Os/
        fvbZyFqbKqXeTET/RCn1hSzLvjwcDv/grrvuOiIi2NjY+JnP/0sP8NSpU2BmJqX+djwej7/z
        7W9jOByCiAAARLRARO9RSn1GKfXQcDD4t8z8xpdeekmfOXPmp57/lx4gADAzROQ0EZ3+u6ef
        xiuvvHLZGHLya6TUnyqlHlFKfVRrPS8iePCv//p1z/1LDfCGG27A4uIiyrI8LCL3RFG0urmx
        gVOnTjUauFuIKIm0vn5mZubP4ij68quvvnrXkcOH9Xe/+90rjwdclNJaXysi/9AYUxNRRUSV
        1nqsta6ucJHwpzCzEZESQB3Hca21NmVZltvb25VSyqRpWi0vL1ezs7Myv7DAzCyPP/YY53ku
        PxdKryPHjx8HEaUA3qa1/jSAd4sIjcdjvO9978NnPvMZaK2b8SKT27HWoqoqMDOUUmvGmH99
        8ODBrz3yyCO44447pq4TAUCaphCRf0xEn42jSBRBlFJCRAKQAIBAEK4hkwuKUsoAKAWomblm
        ZqOUKldWVqooiozWURXH8dhaW+wMhzsAin9w0039KI5za82QiIzWUQ0gBzAgolGej/Ioistu
        d6bu93s7aZpWszMzxYW1C7Ysq93aUwLYACDPP/88brjhBszNzdHW1tYbtdb/Rmt9j4gsMTOY
        GVprnDt3DoPBAEtLS1PgghARRAT+mENRFP3H0y+++MJ111334u6xUaCvlLIiooxKkC8eQawJ
        WmootlBsAbZQbKClghLrVFcACEOxzBIJFBEUKSitEWmFJI4RxzHiKIKKNLTW0EqDiKCUgvjV
        ZmYYa8VaY40xZibrGEXKahJeWVqqAdh+v29NXUtg5yFqEfkOgH8OoFpZ2Ycf//hZdf31J94/
        MzPz+wBuBKDdNQREBK018nyMixcvYmlpaQpGG6ZWCsyMuq5hrb0p63ZvA/D6AImIhS3q7hLW
        3/tpyMoBIKoAqQFbg7gGSQ2FEiQFUFVuX12CihxKdpCwNPoao0akaySRQpLEiJIUaZYhiRMk
        aQINBWUYMq6AfAweDImrXlQWRWQGBey4BJUjyHgHw+1LKHdG0BJDi0CD0YljdDoJRqPRVWVZ
        qoX5BRw6FL/5mmuOvJ+IPkZEBwK4YDd+ntjc3MCZM2dw/PjxKwJUSuHi5hY2ti7h6OFVlGWJ
        nZ2dmz/+8Y//1/vvv58/9rGPTQNkZgAohUXAliiJIPvmgY4CYgIUIBFBIgJHCtAAYgARAZqa
        z1yT+02T865aXJhSABQB5LfJHQMsAFuQMQDXbhKVBSoG6hLYyYFRCVUY0KgGjcZQ4x3EW1u4
        4Xv/HfTys/FoNJpJ4vj2xcXFP07S5GYRQV0bPy8HLWwAsLm5idOnT+O2225DHMe7lQoAMMgr
        PP53z+Ho4VUwM6qquv2ee+45rJQ6c5kGEhGY3VppMdBcg8FAJG7CWgHK/w2Z/E1qFxjy373r
        JJreAB+2/CeRo0sagmQaLgtgJxszARbuew2Y3g5Gpx5DXVaHZ+fm/svKvn3vzLJsyVoDU5sr
        QglS1zXOnDmDfDTC/MKCW8hwbRFYZlyzehAnrrsGxrhzaa2PLS8v33Hw4MH/3D6XuvPOO6G1
        xmg0KkSExdSQegQIA2y9llj3HW5F3YVaWwOkdWb6WfbR9O8ibrMMGAaMv65YQIz7hAXYQCCo
        XZR8w9zs7O8kSbKktQrKgKqqUNc1jKkvA0hEuHBhDVVVASJwhmchLl+EiCBLYswuLaGXl863
        KxVlWfbbTz75ZPbAAw8052pMWEQqBIs0JQxbt+IkaDRLALACrHZayP67CMCtMaJCqJ4AFk+K
        xY0LqyAtiOJ/D1uAOiHsF9H/xYxYkZ80w1oLay2KsoS1Doa1dipq+4CJS5e2UBsTIm0TeQNg
        IuDS7DxqU+KG1B2rtX7zkSNHlono/BRAfxATKdEk0GUJ1BVgnXkBBFhvhhE7M1LKwbUtjVLe
        JMHuM4RqBYDZHa/IH+9hk0xgW5mGHkAGbmInY1hQiyBVCtZYjMeFm6RS0Fq7yG4c1JDvBe1S
        SqHf72M4HGLfvn0QZpBSzWKRUmAGMk04lxv8SuaOL8uys7W1NZemabMgKpwYgNVaI4kUyFbe
        iVvAGL9Zt9XetMJvXAHWANY607PWb8aZYePH2EFknpip9YAMu/OGfZZbWzBp68/H/no1DFya
        VJsaZVlCKVdYMTOsdfACtNY8QUQYDAZ47bXX3Fj22tv62zBjHxucPb+N2jLKskSe5/vyPL8l
        TVN89KMfdQAffvjhcFITRZHEUQRVVICtAK4nQEwN1B6U8bACzGZM+J0nMJuJC2D81gZTWxd1
        6+D3wtjwt50sXvtatQVLhDiOG3CNP2MGs23Mc7cQEYwxGAwGzZhg/s13tliKFexrr2E4GqGq
        KhBRHMfx2++++246cuTIxISVUlBK2TiOEccRyIwdrIqc7bD2fo2dr0u03+8jgnhfJuR9XPCJ
        yqc04j+9CavWcXbXBIMJB9MV8ZrbAl8zUAFVPI84TqCrGtYyjLWNBjab18CgfdZalGUJAA1A
        649rzFIpCBNmkgjUu4iNzQXMZklIhW6977779pNSF6cARlFUR1HEigiocqAqABsDtQBkHUQN
        INLOrzG5XBDKwWVyY5QAmh0wpXwKRC7YNABxub+jsBCt/QFwABoAeldisgUkaYLUGJRlCWNc
        wGhrUzDjoHlVVSMfj9HNMlRV1YwNJq6UcmUcEbQi/NqbDkNBYP1CK6WunZubuwbABKC/QEmA
        AZCiGANl4SpcVoDWzoGz10ISQLxWsodnlZugVhNw2n/X/veQM4YEeqqmbWuep9qOyNzyizUD
        JYN1Bh0lIOSw1kIpMwXQWOvSk5YPDJdUrVItROHJGGp+v+FNR7G5uYm6rgPgTpZlnXDX7VrY
        ABAII7YlUFhnxqJd5A2wrHYRUbOH5jdNPr2hCTStnMYqBSivleK1D5jOCdtpT/uTfbIZzDhs
        kaCaX4KoBDoKUddAKTXRPrM7iEzWhpRqYLcBNnW6CIwxTVOhpclkrc2SJJkGSESliFixFklV
        AGUJlAxIPNEwRU4bmSZaZRVggsbZlgaSgxfxBGoDBJdXJm2IzXeZ3m9bMGFhO7POw/jkOZhg
        iFfiU6egVQ7A5PzhuFBthHIvpEG7A4xfjHg0Gp1YXl7+egPQrwBbZiYIUORAmQNVB4DXHO3z
        Qa0nNbBSQOThRaqlfV7ztPUa6EvAAKAp71oEd/c3mwR8t2n78xQGHMcYM4DaNNonIqhIo9IJ
        KBFQXbW6LK2WnNesoGlt7Qv729oXNFVESCl14wc+8AH65Cc/KREAFEUBIjIzMzNGQUFM5RLp
        0muNVoAy3hQVULe0bAqedgEi0m5f+CRy6UoDKjgimtTEYX+ot6cKELkcZGkgSqOwQOqpGGOA
        KEbtF8wdxpflgQAgLE2nZjfAoLEApoJRMHUiWv3Upz7VzbJs1A4ixlq2EREgBWBGQOVLMuW1
        jVqap9QkJQlmG/a1AWpy+Ry3gAEu5QlNiSa12aWJuzs3aAEsaoA1RoYQWYMoilCWFQzIFThV
        AVsWoBa4UPIJhxLPnbKu66mOTXAF7YDUTsqttVfHcTwPYApgLcKVZQLqsUtjytTdLLVSEAow
        Q47nAVILaACo1aSrEhagLQGoCuB8eTjV4fGQhafNuqwgwigoxnyjGYAUBYgAruvGB/rWvNdI
        8drpNDD4wDa84AeDj2znip7VgTiOr1JKr0UAsLOzA6WUmZubt5oIqh4DVeU2kYl2NZNuaWQD
        Tk1gag8w+Kvd7SxSrXZWALhLC6e2XdopAKoaEIYkHQgz6tr5QNgK1lcfIuLzdZ9MT/kFwPpq
        pa7rqTIwiiJvANRE4tCU8Gac6Cia1Uq5IOJPwMzWsiiwqZwGVhmaXlkAGIABE2hqF0jtU5dQ
        RoVeYQOnpWHhu2rD9ANJvIa2GhPOKEFVDRnnQJSCAVRVhSzrIO10kOe5C9xEIJpoXoDjHic4
        V2DMJABdqexr+8AmyWZOTV0vidaThioRGWY21lpwXblEOmjg1GTV5DNADJDa8ILjD5MPcw9j
        2+chTMo7BVDbV4bfwgNY5RJ2uTQA1jdga0AwcfhxHIEIMBSBowRwj8N8W9O1jtK04zXPNNVI
        W8vaOWGIyO1PY0xcluVMkqQeoHOYbK1lQ4CKKpApIXXriWajBe3IGUyTpgEGeLu70WgdH3qM
        DbiJPxS0rqWVhwoHrjRAUQL5GCgKWFGojXf0rJv+HDcA/ORBvqyeBIOqKlGW5RUBhi1o5cSP
        Ot8pIoqI3PUi5zCttdYqAtjWLo2pq+kJN75o17721uqrTfwXvc73VmBq/OmuxfGmLcYA48JX
        R+I+jbu/kMtFUdRMWJnK9fkg4Eg7E5VJfgc4s2/XwwGS1noqlQnSrkjE+YBQiQCA2KqqrTCj
        VhWkKqcB7p54W5vaANx0W3CBKYDNcS14jQaqy/ebGqjrSXs/3LAxQF2DrWuGGlOjNhpx4h4S
        iTUQUwNEEJ016Ysxk4dNtU/AQ6QNYMMiaK0RRRE6nQ6KomjyRRG2WquCmQNAhoCsMbUVtmBV
        gOpiYsJTcDANpfk9jJHJoN0ALxsfglMwXzXZ3zRlzXQRK/4f6zTQ1mWT61VV1bhbN8otpIND
        EGEYa6B8mmKtT1+w+/YISRJjpjuDOI4RaQVb18iLMcqyRBRF1cLCwqAxYTh7tyxixRrAliBb
        uRVUTVjcpU27LqsULpPdY9qLMWX6re8iE3DttGN3jewBszWAryDiKAZIoQZBNAOtZoDSqkmQ
        4f3dj559AVF3ASzATNZBt5MgTVPMzC9gcZkwH8+h080wSCwuSoxLmxdx8fxZbG9tmtHOYKR1
        5AGKgJRiYWYWARvXMkcASFeA02I55R/ldfZPHdPSvgDQhclJy78t7SZAOH8A6P0WKYW6rgCO
        YZMukMYQVbucFr50E4FwSKSBfcuLOHrkaly8NMQwH+PSsI/KGBRpgWTRwuykiFYzqHgGzHNQ
        eYyIYxw6dMi+8eBNtWWZPFQSZoHWIsxgayDWtAC2/N8VQXrNuVLAeb3x7fNKAPf6h0yBFDh/
        yMZFVW+GVV1DiQBRCtExJEp9e76GUu4eLbvHl8yMq/bvw9Gr34CrlkduvwA6ipB2MszNzqI7
        N4c0FewMe9jORhgezrA9u4I8H4+jKBpEaD2VQ2gaiYDYgthA2Lge3xU1sOXr2mAmXy4f147i
        7L1V6PddqR0jrePbfweYbH2P1acd3t1Yw/CO0eeIobEgUz4SEJRlico3S4PYukJZjEEQ1OMI
        29vbGAwGKIoCZVmhLMvtoij6CAB9uHZvY4V5snHbFEA/0am+GmHKZNsTvFIACQDlp2ncbv8n
        kygc9tUF2DKENBQRSGkYlbpr2hrCAiU+lLTSl3APofpoJ88A2i8VgYjQ6/WQ53k7Wm8mSTKJ
        wr4O9M7BhW+yxr2b0m69h4k38/tpNtfm0W4KyK5FaGbVGs/+WldatAlAqkaQBFBaATZyMLWG
        UAQidt7B9yG5BTHSGjOzswjzb79YtLsCCW85tOBe6PV6o0kUdj+4qxDcqwwmhy13AJ1MTwwy
        0a7w6seuibnRPJm4CAgMgoNHbThtmOLHsPNvFHp54s41/S6fQMNCi8GoKsEi0DpCLQpWdSAU
        w9U0BcSOIX7hghbFcYys07kiwACxxabp1FhrUdf19m/+5rvsn/zJf3IAXSZuJI4TcXrAiMtt
        wJQAKRDbZoIAwKZ2EMAg9s1ICEiMb6AIKED2wBSxH6d858p3SogAIZCp3bNomTzXBVuvNRNo
        7awt+L2RIiRxgjjtYGwisEoAHblzyeRVEAnHECGOY8zMzDSwdgMMUKeasM0Y/dI3vvF1fOlL
        XwotfVfKRLE7oByPQMWriEWactVdyKUK1udXzUQAkCJflLgOCCnv2L2PJBBERSiO/zPIiVtB
        qxo0S+4h38Uc3W99CfbMYxAo18cTvuwRiVuatrILiBmaXMWQdbvo7wigE4iOmyNE/IL6k1m2
        SNMUc3Nzl2kb4FxY8I/td2c8aCPCrwST9hrIqKoaaSfzeWwFiPcrSgFKe4s1MLsiVlhd2PA4
        0GkwLHnXSd7HCkRq6AuPQo2fhX6GoMRAjIE2FXj7AthXCyIszMIiwiKiReSKiWiYfBzHmJ2d
        hVXu+YtECUQnPgpbn/W4BSGfcM/MuCojjuPLAIbeYOhIt+fLLNZaux1er26nMSAEyhNVb2++
        4GYiquGeIYfNvbknYpkhRAKtddzpdPYTKU1E/rVfDYUBVH+IKIqQxAmyLLs0KPrf2LbFRhzH
        /SRJ+sy8s7Mz7DHLgJk/TES/eyWAAmfueZ6jLEuQ1ojiGYiysPEsWCXOxXh48CDZWmTdLLxQ
        0AALDYS2vwt9QKdo4bmI4sC03dK3cRI/OjuzmA6Hw+2iKPpZ1i2IqFdV1dAyD+u63mHmHMAQ
        wA4RjbXWYwCliFT+0xRFaT/ykY+8+fDhw39ljF0BBFprxHHcFOhaayRJisXFhb8/ceLEx9/6
        1rf2w6oHmZnpgtneFEXx7066wZjyieEY8SUg8QCqGkKRhpBuEm60/JwAWFhYRKfTae4pnCNA
        bDcY2kFGRGpAmpcOI8C1dV58/nnze/fcc9+xY8f+9OVXXqm+f/Jk/Z733Mn33nuv/Oqv/ors
        nlyQ4Ava8uSTT0JErvKRvXHK7f9WEL6naVrMzs6ac+fO4V3vehduvPFGbG1tqTzPdVmWSilV
        RFEkOopIRFCV5Wsi3NVazzWWQ9PPfN2fBoTwpmo7gjsgK8vLyLIMSZIgiqKp1KWdvhARoihq
        jifChgguBhSNCV934gTgzLEf9j3wwF/igQf+8jJAP028yisAqizLRuuCPwlm42+uiuPY+tfH
        kOe56vf7XWaeA7AognljzJhFuhCRqqpiay1HUSRKKXI9CNWKpoDI9AuT7UpHRJAkMQ4ePIi5
        uTnXbdkFMPT9gjnvMvHzADaVV4YIPwfZ2NhAFEWdsiz3lWVJzGzPnTt3qN/vRxsbG422uTZR
        gizLmi2O47eMRqPf73Q6X3nmmWfWiGhzZWWljOM40lorAN+sqmqTiI6KyKJ1WfGqMeY4gKsA
        ZESktdYIr/iSr7EnZslNQAMEMzOzOHToELIsQxRFk+ckLb8HoIHXfsTJzD/8wl98YfDhf/nh
        nw/AXq+HTqfTuXTp0r+vquqj1lqMx2MYY5K6rmdHo1HbXBuf0+l00O12YYzZ3+/3P724uPh7
        3W53K0mS/7GxsfFXRPTD4XDYO3r06PkkSb6dJElSVVU30tEsER1g5uuZ+TdE5BZmvo6Zl4xB
        FKJ+5P9fSgAZ4IkI5ufncfDgwSYKt9OW9ktGwHRlUtc1hsPh82vnL8g73vEOEhH5PwK4traG
        wWAQr6+vf0pE/h0zzzAzhsMh1tfXkaZpo3kh4sVxjDRNkaYpsizD2toaXn75ZXX8+PF9WZbt
        S5LkBBG93xjz2Hg8/ubp06d/fODAgR9ub28Pbr755mI4HPa01hta67PM/CNr7d+KyFuZ+RYA
        xwActNZ2mFkpZaCUhlI+N/UamaYplpeXG3DhM4ALEJm5ae8bY5Dn+egHP/jBkIgOdbvdfHl5
        Odevj+cny7lz57C0tKQ3Nzf/Vb/f/+PRaDSX5znG4zH6/T7W19cxNzeHnZ2dZiWTJGlWXSmF
        OI5x6tQpfPWrX0Xa6UBEMBwOMRgMZgeDwQ15nv9WURTvK8vyrUSk7rzzzs0PfehDxYULF8qN
        jY1ca31JRM4ppZ5TSp0CcE5ECiJKACTMEjEzBd8btOzgwYO46667MD8/38DbHSDzPEe/38dg
        MICIYDQaYXNza/zYY4//KM9HAyISY4z9CU2715cHH3wQVVXpq6+++l/kef65uq5X2s9U83yM
        73//JFZWVuTSpUv1aDSy4/HYEJGICI9GI/R6vSrrdkmYO2VZZaurq3p+fp5mZrpYXV1Fx9ep
        IUleXFysOp3O3y8tLr4E4NGXXn75ofe+971nDx8+LP1+X1trM2PMIjO/UUROMPOvi8hbROR6
        AAtKqSiOY7LW4vbbb8cf/tEfYW52tpVSJdBa4/z58/j6178u3/zmN6utra3R/v379R133JGc
        P3/+uaeeeuqRU6dOfassyxeUUtta652f2YSPHTsGADh79qz6xCc+kXz2s5/92NmzZ/+wqqqV
        9jgiwnC4g62tLfvQQw+dXl9ff5WZe1VVDZh5CPefCg2cU4q01jOLi4v7Llw4f6DT6SyIyPw1
        1xzdd+21x+ZuuummOEkSsdai1+vpJEmOlWW52u1237K9vT0L4AsbGxu9/fv3j2699dbBI488
        Mqrr+qIx5iVmfsZaex0z/wYz/xYRXeerGhw+fDWyTmeqsXDu3Dl58MEHx9978nuXnv7B0y8U
        RfEjAGcOHDiwU9f18OzZs6fOnDmznmXZOEmSqtPpmNtuu41/IsA777wTDz/8MA4fPox+v6/G
        43FHRObvvffe3yGi/1AUxUrwb+1nqCJcrK+vP3X27NlvMfOPlVKvJEmyTUQjAJUHqAAkItLp
        9XrzW1tbiwCWlVIrzz///Mrq6ur+tbW1maIoiqqqbFEUxebm5nZVVQMAG+Px+HzQUmstbrzx
        RqytrdkjR47YL3/5ywrAZhzHYq01xpiblVJvAoAoirCwsIgoiponcv1+Xz73uc+tP/TQQycB
        nIzj+Kksy14koq3BYLDz+OOP1/BJ5njsHhEMh8NJM+EnyeOPP44PfvCDajwed621+/bv338k
        TdO393q9F5j5BQCc53kxGo2KXq9Xx3FcbG5uvvLYY489BeB0mqbnO53OEIDRWku7LNJao6oq
        6na7xMzkNSQaj8fRc889p5577rnQQHZvVE6aKjZNU86yjLvdrhw/flxOnjyJuq6RpimSJDFl
        WY5FZExEfQAviMhxETk4Ozurl5aWEMcx8jyHMQZPPPFE79FHH/1vcRz/jdb6LBGtJUnSW1lZ
        qU+cOCHr6+t4+umnr8jnZzLhOI4ljuNSKXVxNBoN7rvvvj/o9XqamckYI0VRhIkJgJqIqizL
        6izLKiIyly5dkkOHDmFtbe1Kp283FC2chv5UKUv3VkGv18OFCxcAAO9+97vx+c9/HseOHau3
        tra267oeA9jRWv+FiDzBzG9XSt3a7/f3PfHEE6PvfOc7G5ubW+deeOH5F4bD4TfSNH1FRIZx
        HO9cffXV9dbWlnzta1+7YgUW5H8riPyiy1e+8hXcfffdeOc734lnnnkmqus6EZHEGDMP4Oj8
        /Py8MWbQ6/X6AAZRFO10Op2dKIqqLMv42muv5VtuuQV5nuP+++//idf6pQQYZHfbDbhyPb8n
        e7Ine7Ine7Ine7Ine7Ine/L/l/xP7i9olSgcjEQAAAAASUVORK5CYII=
      </shape>
    </shapes>
  </external>
</workbook>
